import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Telemetry","description":"Telemetry is the process of collecting and transmitting data from a remote source to a central or local source","frontmatter":{"title":"Telemetry","description":"Telemetry is the process of collecting and transmitting data from a remote source to a central or local source","date":"2024-10-05T00:00:00.000Z","lastmod":"2024-10-05T00:00:00.000Z"},"headers":[],"relativePath":"Concepts/Telemetry.md","filePath":"Concepts/Telemetry.md","lastUpdated":1756574703000}`);var a={name:`Concepts/Telemetry.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="telemetry" tabindex="-1">Telemetry <a class="header-anchor" href="#telemetry" aria-label="Permalink to “Telemetry”">​</a></h1><p>Telemetry is the process of collecting and transmitting data from a remote source to a central or local source. This data can be used for monitoring, alerting, and analysis. Telemetry is used in many different fields, including aerospace, automotive, and healthcare</p><p>Telemetry vs. <a href="./Logging.html">Logging</a>:</p><table tabindex="0"><thead><tr><th>Feature</th><th>Telemetry</th><th>Logging</th></tr></thead><tbody><tr><td>Purpose</td><td>Monitoring</td><td>Event Record</td></tr><tr><td>Focus</td><td>Quantitative</td><td>Qualitative</td></tr><tr><td>Data Types</td><td>Numerical values, time-series data, metrics</td><td>Text, structured data, unstructured data</td></tr><tr><td>Frequency</td><td>Real-time or triggered</td><td>Varies based on logging level</td></tr><tr><td>Use Cases</td><td>Performance monitoring, alerting, analysis</td><td>Debugging, troubleshooting, auditing</td></tr><tr><td>Tools</td><td>Prometheus, Grafana, Jaeger, Zipkin</td><td>ELK Stack, Splunk, Graylog</td></tr><tr><td>Designed</td><td>For machines</td><td>For humans</td></tr></tbody></table><h2 id="observability" tabindex="-1">Observability <a class="header-anchor" href="#observability" aria-label="Permalink to “Observability”">​</a></h2><p>Observability is the ability to understand the internal state of a system based on its external outputs. It is a measure of how well you can understand what is happening inside a system based on the data that is available to you. Observability is important because it allows you to quickly identify and resolve issues that may arise in your system</p><p>Observability is achieved through the use of telemetry data. By collecting and analysing telemetry data, you can gain insights into the performance and behaviour of your system. This data can help you identify bottlenecks, troubleshoot issues, and optimize your system for better performance</p><blockquote><p>Observability is about understanding and debugging unknown-unknowns; <strong>the ability to understand any inner system state</strong> just by asking questions from outside the system.</p><p>Charity Majors, Observability Pioneer, Co-founder of Honeycomb.io</p></blockquote><p>Asking questions:</p><ul><li>What was the impact of my change?</li><li>Is the code being used?</li><li>Is the feature being used?</li><li>Has the time for any action changed?</li><li>How are those third parties doing?</li><li>How is cross-region latency going?</li></ul><p>Why is telemetry needed?</p><ul><li>Ship more often</li><li>Produce better code</li><li>Spend less time fixing and more time creating value</li><li>Decrease downtime</li><li>There&#39;s way more to know</li><li>We&#39;re afraid we&#39;ll break things</li><li>We&#39;ve forgotten what we&#39;ve built by the time it ships</li><li>We can&#39;t figure out what&#39;s wrong and fix it</li></ul><table tabindex="0"><thead><tr><th>Observability</th><th>Monitoring</th></tr></thead><tbody><tr><td>Unknown unknowns</td><td>Known unknowns</td></tr><tr><td>Debugging</td><td>Alerting</td></tr><tr><td>Understanding</td><td>Reporting</td></tr><tr><td>Questions</td><td>Answers</td></tr><tr><td>Exploratory</td><td>Confirmatory</td></tr><tr><td>Ad-hoc</td><td>Scheduled</td></tr><tr><td>Real-time</td><td>Historical</td></tr><tr><td>Proactive</td><td>Reactive</td></tr></tbody></table><h2 id="opentelemetry" tabindex="-1">OpenTelemetry <a class="header-anchor" href="#opentelemetry" aria-label="Permalink to “OpenTelemetry”">​</a></h2><p>OpenTelemetry is an open-source observability framework that provides a standard set of APIs, SDKs, and collectors to instrument applications, microservices, and cloud-native platforms. It enables developers to capture and export telemetry data, such as metrics, logs, and traces, to a variety of backend analytics systems</p><ul><li><p>It is a CNCF project</p></li><li><p>It is a merger of OpenTracing and OpenCensus, two popular observability projects</p></li><li><p>It is a protocol for telemetry data</p></li><li><p>Vendor-neutral</p></li><li><p>Standardized instrumentation</p></li><li><p>Flexible and extensible</p></li><li><p>SDKs for multiple languages</p></li><li><p><strong>Instrumentation Libraries</strong>: SDKs for various programming languages that provide APIs for instrumenting applications</p></li><li><p><strong>Collectors</strong>: Agents that collect telemetry data from instrumented applications and forward it to backend systems</p></li><li><p><strong>Exporters</strong>: Components that export telemetry data to backend systems, such as Prometheus, Jaeger, and Zipkin</p></li><li><p><strong>Processors</strong>: Components that transform, filter, and enrich telemetry data before exporting it to backend systems</p></li><li><p><strong>Context Propagation</strong>: Mechanisms for propagating context across service boundaries to correlate telemetry data</p></li></ul><h3 id="current-signals" tabindex="-1">Current Signals <a class="header-anchor" href="#current-signals" aria-label="Permalink to “Current Signals”">​</a></h3><p>Signals are the types of telemetry data that OpenTelemetry captures. The three main signals are traces, metrics, and logs. Each signal provides a different perspective on the performance and behaviour of a system</p><ul><li><strong>Traces</strong> (Stable): Captures the flow of requests through a distributed system</li><li><strong>Metrics</strong> (Stable): Captures quantitative data about the performance and behaviour of a system</li><li><strong>Logs</strong> (Only Protocol is stable): Captures structured and unstructured data for debugging and troubleshooting</li></ul><h4 id="trace" tabindex="-1">Trace <a class="header-anchor" href="#trace" aria-label="Permalink to “Trace”">​</a></h4><p>Traces are used to capture the flow of requests through a distributed system. A trace is a collection of spans that represent the lifecycle of a request as it travels through different services. Each span contains metadata about the request, such as the start time, end time, and duration</p><ul><li>The &quot;thing&quot; that is being done</li><li>Not something we create</li><li>A trace is a collection of spans</li></ul><blockquote><p>Logs are fancy traces</p></blockquote><h5 id="span" tabindex="-1">Span <a class="header-anchor" href="#span" aria-label="Permalink to “Span”">​</a></h5><p>A span represents a single operation within a trace. It contains metadata about the operation, such as the start time, end time, duration, and tags. Spans are linked together to form a trace, which represents the flow of a request through a distributed system</p><ul><li>Structured Blob of data that also has: <ul><li>Unique ID (span ID)</li><li>Correlation ID (trace ID)</li><li>Duration (start time, end time)</li><li>Timestamps</li><li>Causality ID (parent span ID)</li></ul></li></ul><h2 id="auto-instrumentation" tabindex="-1">Auto-Instrumentation <a class="header-anchor" href="#auto-instrumentation" aria-label="Permalink to “Auto-Instrumentation”">​</a></h2><p>Auto-instrumentation is the process of automatically instrumenting an application to capture telemetry data without requiring manual code changes. It is a key feature of observability frameworks like OpenTelemetry, which provide SDKs and agents that can automatically instrument applications</p><ul><li>Codeless instrumentation</li><li>Environment variable configuration</li><li>Sideloaded</li><li>Getting started quickly</li><li>Verbose</li></ul><h3 id="get-started-with-opentelemetry-auto-instrumentation-dotnet" tabindex="-1">Get Started with OpenTelemetry Auto-Instrumentation DotNet <a class="header-anchor" href="#get-started-with-opentelemetry-auto-instrumentation-dotnet" aria-label="Permalink to “Get Started with OpenTelemetry Auto-Instrumentation DotNet”">​</a></h3><p>PowerShell module (Windows):</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Download the module</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">module_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation/releases/download/v1.8.0/OpenTelemetry.DotNet.Auto.psm1</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">download_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;"> Join-Path</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> $</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">temp</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">OpenTelemetry.DotNet.Auto.psm1</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Invoke-WebRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">Uri </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">module_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">OutFile </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">download_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">UseBasicParsing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Import the module to use its functions</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Import-Module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">download_path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Install core files (online vs offline method)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Install-OpenTelemetryCore</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Install-OpenTelemetryCore</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">LocalPath </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">C:\\Path\\To\\OpenTelemetry.zip</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Set up the instrumentation for the current PowerShell session</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Register-OpenTelemetryForCurrentSession</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">OTelServiceName </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MyServiceDisplayName</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Run your application with instrumentation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">.\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">MyNetApp.exe</span></span></code></pre></div><p>Shell scripts:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Download the bash script</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -sSfL</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation/releases/download/v1.8.0/otel-dotnet-auto-install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -O</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Install core files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ./otel-dotnet-auto-install.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Enable execution for the instrumentation script</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> +x</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">/.otel-dotnet-auto/instrument.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Setup the instrumentation for the current shell session</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">/.otel-dotnet-auto/instrument.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Run your application with instrumentation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">OTEL_SERVICE_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">myapp</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> OTEL_RESOURCE_ATTRIBUTES</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">deployment.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">staging,service.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">version</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">1.0.0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> ./MyNetApp</span></span></code></pre></div>`,34)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};