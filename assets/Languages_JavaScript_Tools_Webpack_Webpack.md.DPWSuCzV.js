import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Webpack","description":"A static module bundler for modern JavaScript applications","frontmatter":{"title":"Webpack","description":"A static module bundler for modern JavaScript applications"},"headers":[],"relativePath":"Languages/JavaScript/Tools/Webpack/Webpack.md","filePath":"Languages/JavaScript/Tools/Webpack/Webpack.md","lastUpdated":1739650350000}`);var a={name:`Languages/JavaScript/Tools/Webpack/Webpack.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to “Webpack”">​</a></h1><p>It is a <strong>A static module bundler for modern JavaScript applications</strong></p><p>A module bundler takes all of our different files (JavaScript, LESS, CSS, JSX, ESNext, and so on) and turns them into a single file</p><p>The two main benefits of bundling are <em>modularity</em> and <em>network performance</em>. It can also put source code through loaders that can transform and compile it</p><p>Some of the features are:</p><ul><li><p><strong>Code splitting</strong>: Splits up code into different chunks that can be loaded when required. Sometimes these are called as <em>rollups</em> or <em>layers</em></p></li><li><p><strong>Minification</strong>: Removes whitespace, line breaks, rename lengthy variable names to smaller ones, and unnecessary code to reduce the file size</p></li><li><p><strong>Feature Flagging</strong>: Sends code to one or more-but not all-environments when testing out features</p></li><li><p><strong>Hot Module Replacement (HMR)</strong>: Watches for changes in source code. Changes only the updated modules immediately without reloading the browser tab</p></li><li><p><strong>Modularity</strong>: Using module pattern, we can split code into multiple files and import them based on the requirement in each file</p></li><li><p><strong>Composition</strong>: With modules, we can build small, simple, reusable React components that we can compose efficiently into applications. Smaller components are easier to comprehend, test, and reuse. They&#39;re also easier to replace down the line when enhancing applications</p></li><li><p><strong>Speed</strong>: Packaging all the application&#39;s modules and dependencies into a single client bundle will reduce the load time of an application</p></li><li><p><strong>Consistency</strong>: Since webpack will compile JSX and JavaScript, we can start using tomorrow&#39;s JavaScript syntax today. Babel supports a wide range of ESNext syntax, which means we don&#39;t have to worry about whether the browser supports our code. It allows developers to consistently use cutting-edge JavaScript syntax</p></li></ul><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to “Setup”">​</a></h2><p>To get started install <code>webpack</code> and <code>webpack-cli</code> as either global or local dependency</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> webpack</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> webpack-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span></span></code></pre></div><p>Once installed add the below script tags inside <code>package.json</code> file:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">webpack</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># FOR YARN ADD THIS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ./node_modules/webpack-cli/bin/cli.js</span></span></code></pre></div><p>The above command will invoke webpack with its default settings and produce results</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Webpack v5 is being used here</p></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to “Configuration”">​</a></h2><p>We can use webpack out of the box without any user defined configurations</p><p>By default:</p><ul><li>It looks for <code>index.js</code> file in the <code>src</code> directory and starts building from there</li><li>Generates the bundled output file called <code>main.js</code> inside the <code>dist</code> directory</li><li>Include all the project dependencies inside <code>index.js</code> file and webpack by default can handle most of these dependencies</li></ul><p>If the user wants to <strong>override the defaults</strong>, customize webpack, or handle dependency, they can <strong>create a configuration file</strong></p><p>Webpack&#39;s configuration file is a JavaScript file that exports a webpack configuration</p><ul><li><p>Create a file called <code>webpack.config.js</code> in the root directory of the repository (or anywhere and pass the path to webpack)</p></li><li><p>In the <code>package.json</code> file add a script that invokes webpack with this configuration file. <code>webpack --config webpack.config.js</code></p></li></ul><p>Configuration file exports a configuration object:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span></code></pre></div><ol><li><p><code>entry</code>: Entry point for the webpack. Default: <code>./src/index.js</code></p></li><li><p><code>output</code>: Output file and directory. Default: <code>./dist/main.js</code></p></li><li><p><code>mode</code>: Mode in which webpack needs to operate in <code>development</code>, <code>production</code> or <code>none</code>. Default: <code>production</code></p></li><li><p><code>devtool</code>: To create source-maps or remove <code>eval</code> from output file</p></li><li><p><code>loaders</code>: Webpack only understands JavaScript and JSON files by default. <a href="#loaders">Loaders</a> allow webpack to process other types of files</p></li><li><p><code>plugins</code>: <a href="#plugins">Plugins</a> can perform wider range of tasks like bundle optimization, asset management and injection of environment variables</p></li></ol><h2 id="loaders" tabindex="-1">Loaders <a class="header-anchor" href="#loaders" aria-label="Permalink to “Loaders”">​</a></h2><p>Loaders help webpack to pre-process files. This allows you to bundle any static resource way beyond JavaScript</p><p>Loaders work at the individual file level <em>during or before</em> the <strong>bundle</strong> is generated</p><h3 id="transpiling" tabindex="-1">Transpiling <a class="header-anchor" href="#transpiling" aria-label="Permalink to “Transpiling”">​</a></h3><ul><li><p><code>babel-loader</code>: This package allows transpiling JavaScript files using <strong><a href="https://github.com/babel/babel" target="_blank" rel="noreferrer">Babel</a></strong>. Use <code>babel.config.js</code> for babel configurations</p><p>Installation:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> babel-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> @babel/core</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> @babel/preset-env</span></span></code></pre></div><p>Usage:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">      test</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> /</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#E6CC77;--shiki-dark-font-weight:inherit;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#C4704F;">js</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">      exclude</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#C4704F;">node_modules</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">      use</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">        loader</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">babel-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><p>Configuration:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  presets</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">@babel/preset-env</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">@babel/preset-react</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;"> runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">automatic</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Babel uses <a href="https://github.com/browserslist/browserslist" target="_blank" rel="noreferrer">browserslist</a> to traget browsers</p></div></li><li><p><code>ts-loader</code>: Loads <a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">TypeScript</a></p></li></ul><h3 id="templating" tabindex="-1">Templating <a class="header-anchor" href="#templating" aria-label="Permalink to “Templating”">​</a></h3><ul><li><p><code>html-loader</code>: Exports HTML as string. HTML is minimized when the compiler demands</p><p>Installation:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> html-loader</span></span></code></pre></div><p>Usage:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">rules</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">    test</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> /</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#E6CC77;--shiki-dark-font-weight:inherit;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#C4704F;">html</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">    loader</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">html-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul><h3 id="styling" tabindex="-1">Styling <a class="header-anchor" href="#styling" aria-label="Permalink to “Styling”">​</a></h3><ul><li><p><code>css-loader</code>: Loads CSS files from imports</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> css-loader</span></span></code></pre></div></li><li><p><code>style-loader</code>: Inject CSS into the DOM</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> style-loader</span></span></code></pre></div></li><li><p><code>sass-loader</code>: Loads a Sass/SCSS file and compiles it to CSS</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> sass-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> sass</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Needs <a href="https://github.com/sass/dart-sass" target="_blank" rel="noreferrer">Dart Sass</a> or <a href="https://github.com/sass/node-sass" target="_blank" rel="noreferrer">Node Sass</a> Recommended to use Dart Sass</p></div></li><li><p><code>postcss-loader</code>: Loader to process CSS with <a href="https://github.com/postcss/postcss" target="_blank" rel="noreferrer">PostCSS</a></p><p>Installation</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> postcss-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> postcss</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> postcss-preset-env</span></span></code></pre></div><p>Requires <code>postcss.config.js</code> for configuration:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">postcss-preset-env</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>PostCSS uses <a href="https://github.com/browserslist/browserslist" target="_blank" rel="noreferrer">browserslist</a> to traget browsers</p></div></li></ul><p>Basic styling configuration:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">      test</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> /</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#E6CC77;--shiki-dark-font-weight:inherit;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#C4704F;">scss</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">      use</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">style-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">css-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">postcss-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">sass-loader</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">      ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to “Plugins”">​</a></h2><p>Plugins work at <strong>bundle</strong> or <strong>chunk</strong> level and usually work at the end of the bundle generation process</p><p>Plugins can also modify how the bundles themselves are created. Plugins have more powerful control than loaders</p>`,37)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};