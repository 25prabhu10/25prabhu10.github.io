import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Microfrontends","description":null,"frontmatter":{"title":"Microfrontends","description":null,"date":"2023-03-16T00:00:00.000Z","lastmod":"2023-03-16T00:00:00.000Z"},"headers":[],"relativePath":"Languages/JavaScript/Microfrontends.md","filePath":"Languages/JavaScript/Microfrontends.md","lastUpdated":1690829560000}`);var a={name:`Languages/JavaScript/Microfrontends.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="microfrontends" tabindex="-1">Microfrontends <a class="header-anchor" href="#microfrontends" aria-label="Permalink to “Microfrontends”">​</a></h1><p>Microfrontend is a front-end web development pattern in which a single application may be built from disparate builds</p><p>It is analogous to a microservices approach but for client-side single-page applications written in JavaScript</p><ul><li>Divide a monolithic app into multiple, smaller apps</li><li>Each smaller app is responsible for a distinct feature of the product</li></ul><p>Microfrontend using the following three approaches:</p><ul><li>With Module Federation (<a href="./Tools/Webpack/Webpack.html">WebPack</a>)</li><li>With Web Components</li><li>With IFrames</li></ul><p>Usecases:</p><ul><li>Multiple engineering teams can work in isolation</li><li>Each smaller app is easier to understand and make changes to</li><li>Each app can be built using different tech stack</li></ul><h2 id="integration" tabindex="-1">Integration <a class="header-anchor" href="#integration" aria-label="Permalink to “Integration”">​</a></h2><p>Major categories of integration:</p><ol><li><p>Build-Time Integration (compile-time integration): Before Container gets loaded in the browser, it gets access to different apps source code</p></li><li><p>Run-Time Integration (client-side integration): After Container gets loaded in the browser, it gets access to different apps source code</p></li><li><p>Server Integration: While sending down JavaScript to load up Container, a server decides on whether or not to inculde app source code</p></li></ol>`,11)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};