import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"IAM","description":"IAM","frontmatter":{"title":"IAM","description":"IAM","prev":"./AWS"},"headers":[],"relativePath":"Concepts/AWS/AWS_IAM.md","filePath":"Concepts/AWS/AWS_IAM.md","lastUpdated":1756574703000}`);var a={name:`Concepts/AWS/AWS_IAM.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="iam" tabindex="-1">IAM <a class="header-anchor" href="#iam" aria-label="Permalink to “IAM”">​</a></h1><ul><li><p>IAM: <strong>Identity and Access Management</strong> (<em>Global Service</em>)</p></li><li><p><strong>Root account</strong> created by default, <strong>shouldn&#39;t be used or shared</strong></p></li><li><p><strong>User represents the person or service</strong>, they have the ability to sign in to the AWS Management Console for interactive tasks and to make programmatic requests to AWS.</p></li><li><p><strong>Group is a collection of IAM users</strong>. Can <strong>only contain users</strong>, and not other groups</p></li><li><p><strong>Role is very similar to a user</strong>. However, a role <strong>dose not have any credentials</strong> associated with it</p></li><li><p>Users don&#39;t have to belong to a group, and user can belong to multiple groups</p></li><li><p>Some AWS service will need to perform actions on behalf of the user.</p></li><li><p>To do so, they are <strong>assigned permissions</strong> to AWS services <strong>with IAM Roles</strong></p></li><li><p>Common roles:</p><ul><li>EC2 Instance Roles</li><li>Lambda Function Roles</li><li>Roles for CloudFormation</li></ul></li></ul><p>Permissions:</p><ul><li><strong>User or Groups can be assigned</strong> JSON documents called <strong>policies</strong></li><li>These <strong>policies define the permissions</strong> of the users</li><li>In AWS you apply the <strong>least privilege principle</strong>: don&#39;t give more permissions than a user needs</li></ul><p>Dashboard:</p><ul><li>Create a new user (using root user for most of the task is not advisable)</li><li>Provide <code>User Name</code>, <code>Access type: AWS Management Console access</code></li><li>Create a new user group, in this case called <code>admin</code> with <code>AdministratorAccess</code> policy</li><li>Add tags (optional), these are meta-data attached to the user.</li></ul><h2 id="policies" tabindex="-1">Policies <a class="header-anchor" href="#policies" aria-label="Permalink to “Policies”">​</a></h2><p>A <strong>policy is an object in AWS</strong> that, when associated with an identity or resource, <strong>defines their permissions</strong>.</p><p>When you create a permissions policy to restrict access to a resource, you can choose an <em>identity-based policy</em> or a <em>resource-based policy</em>:</p><ol><li><p><strong>Identity-based policies are attached to an IAM user, group, or role</strong>.</p><ul><li>These policies let you specify what that identity can do (its permissions).</li><li>It is <em>resource-level permission</em> in an identity-based policy.</li><li>Identity-based policies can be <strong>managed or inline</strong>.</li><li>User can have <strong>standalone policies</strong> called <strong>inline policies</strong></li><li>User can define their own polices</li></ul></li><li><p><strong>Resource-based policies are attached to a resource</strong>.</p><ul><li>With resource-based policies, you can specify who has access to the resource and what actions they can perform on it.</li><li>Resource-based policies are <strong>inline only</strong>, not managed.</li></ul></li></ol><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p><em>Resource-based policies</em> differ from <em>resource-level permissions</em>. You can attach resource-based policies directly to a resource. Resource-level permissions refer to the ability to use ARNs to specify individual resources in a policy. Resource-based policies are supported only by some AWS services.</p></div><h3 id="policy-evaluation-logic" tabindex="-1">Policy evaluation logic <a class="header-anchor" href="#policy-evaluation-logic" aria-label="Permalink to “Policy evaluation logic”">​</a></h3><ul><li>Check <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html" target="_blank" rel="noreferrer">Policy evaluation logic</a></li><li>Explicit <strong><code>Deny</code> overrides all <code>Allow</code></strong></li><li>AWS checks first for all polices for a <code>Deny</code>. If exists, then request is denied.</li><li>AWS then checks for each <code>Allow</code>. If <strong>at least one policy statement allows the action, request is allowed</strong>. No matter whether the <code>Allow</code> is in the <strong>identity-based or resource-based policy</strong>.</li></ul><div class="danger custom-block"><p class="custom-block-title">NOTE</p><p><strong>The above logic dose not apply for requests made from one account to another</strong>. There must be polices on both accounts that allow the operation. The requester in Account A must have an identity-based policy that allows them to make a request to the resource in Account B. Also, the resource-based policy in Account B must allow the requester in Account A to access the resource.</p></div><p><em>Steps</em>:</p><ol><li><p><strong>Authentication</strong>: AWS <strong>first authenticates the <em>principle</em></strong> that makes the request, if necessary. This step is <strong>not necessary for a few services</strong>, such as <strong>Amazon S3</strong>, that allow some requests from anonymous users.</p></li><li><p><strong>Processing the request context</strong>: Gather following info into a <em>request context</em>:</p><ul><li><strong>Actions (or operations)</strong>: The actions or operations that the principal wants to perform.</li><li><strong>Resources</strong>: The AWS resource object upon which the actions or operations are performed.</li><li><strong>Principal</strong>: <strong>The user, role, federated user, or application that sent the request</strong>. Information about the principal includes the policies that are associated with that principal.</li><li><strong>Environment data</strong>: Information about the <em>IP address, user agent, SSL enabled status, or the time of day</em>.</li><li><strong>Resource data</strong>: Data related to the resource that is being requested. This can include information such as a DynamoDB table name or a tag on an Amazon EC2 instance.</li><li><em>AWS uses the above info to find policies that apply to the request context</em>.</li></ul></li></ol><div class="warning custom-block"><p class="custom-block-title">IMPLICIT DENY</p><p>By default, all requests are implicitly denied with the <strong>exception of the AWS account root user</strong>, which has full access.</p></div><h3 id="policies-structure" tabindex="-1">Policies Structure <a class="header-anchor" href="#policies-structure" aria-label="Permalink to “Policies Structure”">​</a></h3><ul><li><p>Consists of</p><ul><li><code>Version</code>: policy language version, always include &quot;2012-10-17&quot; (<strong>required</strong>)</li><li><code>Id</code>: an identifier for the policy (optional)</li><li><code>Statement</code>: one or more individual statements (<strong>required</strong>)</li></ul></li><li><p>Statement consists of</p><ul><li><code>Sid</code>: an identifier for the statement (optional)</li><li><code>Effect</code>: whether the statement allows or denies access (<code>Allow</code>, <code>Deny</code>)</li><li><code>Principal</code>: account/user/role to which this policy applied to</li><li><code>Action</code>: action that is being controlled for a given service</li><li><code>Resource</code>: list of resources to which the actions applied to</li><li><code>Condition</code>: conditions for when this policy is in effect (optional)</li></ul></li></ul><p><em>Example:</em></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Version</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">2012-10-17</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Id</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">S3-Account-Permisions</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Statement</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Sid</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Effect</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Allow</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Principal</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">        &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">AWS</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">arn:aws:iam::123456789012:root</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">      },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Action</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">s3:GetObject</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">s3:PutObject</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Resource</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">arn:aws:s3:::mybucket/*</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="testing-iam-policy" tabindex="-1">Testing IAM Policy <a class="header-anchor" href="#testing-iam-policy" aria-label="Permalink to “Testing IAM Policy”">​</a></h3><ul><li><p>Using this link <a href="https://policysim.aws.amazon.com/home/index.jsp" target="_blank" rel="noreferrer">IAM Policy Simulator</a></p></li><li><p>Using CLI, add <code>--dry-run</code> to simulate the command</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">aws</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> run-instances</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --dry-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --image-id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ami-06340c812baa7</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --instance-type</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> t2.micro</span></span></code></pre></div></li></ul><h3 id="password-policy" tabindex="-1">Password Policy <a class="header-anchor" href="#password-policy" aria-label="Permalink to “Password Policy”">​</a></h3><ul><li>Strong passwords = higher security</li><li>In AWS, you can setup a password policy: <ul><li>Set a minimum password length</li><li>Require specific character types: <ul><li><em>Including uppercase letters</em></li><li><em>Lowercase letters</em></li><li><em>Numbers</em></li><li><em>Non-alphanumeric characters</em></li></ul></li><li>Allow all IAM users to change their own passwords</li><li>Require users to change their password after some time (password expiration)</li><li>Prevent password re-use</li></ul></li></ul><h2 id="multi-factor-authentication-mfa" tabindex="-1">Multi Factor Authentication - MFA <a class="header-anchor" href="#multi-factor-authentication-mfa" aria-label="Permalink to “Multi Factor Authentication - MFA”">​</a></h2><ul><li>Users have access to your account and can possibly change configurations or delete resources in your AWS account</li><li><strong>Root account and IAM users must have MFA</strong></li><li><strong>MFA = password + security device</strong></li></ul><h3 id="mfa-devices" tabindex="-1">MFA devices <a class="header-anchor" href="#mfa-devices" aria-label="Permalink to “MFA devices”">​</a></h3><ul><li><p>Virtual MFA device</p><ul><li>Google Authenticator (phone only)</li><li>Authy (multi-device)</li></ul></li><li><p>Universal 2nd Factor (U2F) Security Key</p><ul><li>YubiKey by Yubico (3rd party) (Hardware)</li></ul></li><li><p>Hardware Key Fob MFA Device</p><ul><li>Provided by Gemalto (3rd party)</li><li>For AWS GovCloud (US) - Provided by SurePassID (3rd party)</li></ul></li></ul><h2 id="how-can-users-access-aws" tabindex="-1">How can users access AWS? <a class="header-anchor" href="#how-can-users-access-aws" aria-label="Permalink to “How can users access AWS?”">​</a></h2><ul><li><p>There are 3 options:</p><ul><li><em>AWS Management Console (protected by password + MFA)</em></li><li><em>AWS Command Line Interface (CLI)</em>: protected by access keys</li><li><em>AWS Software Developer Kit (SDK)</em> - for code: protected by access keys</li></ul></li><li><p>Access Keys are generated through the AWS Console</p></li><li><p>Users manage their own access keys</p></li><li><p>AWS CLI can be used to interact with AWS</p></li><li><p>New AWS CloudShell can also be used</p></li></ul><h2 id="iam-security-tools" tabindex="-1">IAM Security Tools <a class="header-anchor" href="#iam-security-tools" aria-label="Permalink to “IAM Security Tools”">​</a></h2><ul><li><p><strong>IAM Credentials Report (account-level)</strong></p><ul><li>A report that lists all your account&#39;s users and the status of their various credentials</li></ul></li><li><p><strong>IAM Access Advisor (user-level)</strong></p><ul><li>Access advisor shows the service permissions granted to a user and when those services were last accessed</li><li>You can use this information to revise your polices</li></ul></li></ul><h2 id="iam-guidelines-best-practices" tabindex="-1">IAM Guidelines &amp; Best Practices <a class="header-anchor" href="#iam-guidelines-best-practices" aria-label="Permalink to “IAM Guidelines &amp; Best Practices”">​</a></h2><ul><li>Don&#39;t use the root account except for AWS account setup</li><li>One physical user = One AWS user</li><li><strong>Assign users to groups</strong> and assign permissions to groups</li><li>Create a <strong>strong password policy</strong></li><li>Use and enforce the use of <strong>Multi Factor Authentication (MFA)</strong></li><li>Create and use <strong>Roles</strong> for giving permissions to AWS services</li><li>Use Access Keys for Programmatic Access (CLI/SDK)</li><li>Audit permissions of your account with the IAM Credentials Report</li></ul>`,35)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};