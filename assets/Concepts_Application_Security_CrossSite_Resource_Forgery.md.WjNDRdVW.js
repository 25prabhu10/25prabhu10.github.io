import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Cross-Site Request Forgery (CSRF)","description":"CSRF is a type of malicious exploit of a website","frontmatter":{"title":"Cross-Site Request Forgery (CSRF)","description":"CSRF is a type of malicious exploit of a website"},"headers":[],"relativePath":"Concepts/Application_Security/CrossSite_Resource_Forgery.md","filePath":"Concepts/Application_Security/CrossSite_Resource_Forgery.md","lastUpdated":1690829560000}`);var a={name:`Concepts/Application_Security/CrossSite_Resource_Forgery.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="cross-site-request-forgery-csrf" tabindex="-1">Cross-Site Request Forgery (CSRF) <a class="header-anchor" href="#cross-site-request-forgery-csrf" aria-label="Permalink to “Cross-Site Request Forgery (CSRF)”">​</a></h1><p><strong>Cross-site request forgery</strong>, also known as <strong>one-click attack</strong> or <strong>session riding</strong> and abbreviated as <strong>CSRF</strong> (sometimes pronounced <em>sea-surf</em>) or <strong>XSRF</strong>, is a type of malicious exploit of a website where unauthorized commands are submitted from a user that the web application trusts</p><ul><li><p>Attack which forces an end user to execute unwanted actions on a web app in which they&#39;re currently authenticated</p></li><li><p>Normal users: CSRF attack can force user to perform requests like transferring funds, changing email address, etc.</p></li><li><p>Admin users: CSRF attack can force admins to add new admin user, or in the worst case, run commands directly on the server</p></li><li><p>Effective even when attacker can&#39;t read the HTTP response</p></li></ul><h2 id="prevention" tabindex="-1">Prevention <a class="header-anchor" href="#prevention" aria-label="Permalink to “Prevention”">​</a></h2><ul><li><p>Synchronizer token pattern (STP): technique where a token, <strong>secret and unique value for each request</strong>, is embedded by the web application in all HTML forms and verified on the server side:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">input</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hidden</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">csrfmiddlewaretoken</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;">  value</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">KbyUmhTLMpYj7CD2di7JKP1P3qmLlkPt</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">/&gt;</span></span></code></pre></div></li><li><p>Cookie-to-header token</p></li></ul>`,5)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};