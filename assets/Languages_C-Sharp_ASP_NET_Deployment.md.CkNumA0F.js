import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Deployment","description":"Deploying ASP.NET Core Applications","frontmatter":{"title":"Deployment","description":"Deploying ASP.NET Core Applications"},"headers":[],"relativePath":"Languages/C-Sharp/ASP_NET/Deployment.md","filePath":"Languages/C-Sharp/ASP_NET/Deployment.md","lastUpdated":1756574703000}`);var a={name:`Languages/C-Sharp/ASP_NET/Deployment.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="deploying-asp-net-core-applications" tabindex="-1">Deploying ASP.NET Core Applications <a class="header-anchor" href="#deploying-asp-net-core-applications" aria-label="Permalink to “Deploying ASP.NET Core Applications”">​</a></h1><p>Backend:</p><ul><li>Health Checks</li><li>Authentication</li><li>Logger</li><li>Testing Framework</li></ul><p>Frontend:</p><ul><li>Stubbing</li><li>Storybook</li><li>Linting</li><li>Testing Framework</li></ul><h2 id="server-choices" tabindex="-1">Server Choices <a class="header-anchor" href="#server-choices" aria-label="Permalink to “Server Choices”">​</a></h2><p>ASP.NET Core applications themselves run as a self-contained process with the help of a server library. If you&#39;ve developed self-hosted OWIN (Open Web Interface for .NET) applications in the past with ASP.NET, you&#39;ll find this pattern familiar. The server itself contains the code that translates raw HTTP requests into the structures that ASP.NET Core is looking for</p><ol><li><p><a href="./IIS.html">IIS</a></p><ul><li>IIS Express</li></ul></li><li><p><code>HTTP.sys</code></p><ul><li>Windows only</li><li>Supports Windows authentication</li></ul></li><li><p><a href="#kestrel">Kestrel</a></p><ul><li>Cross-platform</li><li>Highly optimized</li><li>Recommended</li></ul></li></ol><p>Handling Internet traffic:</p><ul><li><p>Server directly (edge server): Can be used for simple applications</p><ul><li>Internet --&gt; Application code: Server (Kestrel or HTTP.sys)</li><li>App server configured for HTTPS and listening for connections</li><li>Not good for large applications: <ul><li>Hard to scale</li><li>No easy way to balance load and send traffic to another server</li></ul></li></ul></li><li><p>Behind a Reverse Proxy or Load Balancer:</p><ul><li>Internet --&gt; Reverse proxy --&gt; Application code: Server (Kestrel or HTTP.sys)</li><li>Reverse Proxies like IIS/Nginx</li><li>Reverse Proxy acts as a load balancer</li><li>Reverse Proxies configured for HTTPS and listening for connections</li></ul></li></ul><h3 id="kestrel" tabindex="-1">Kestrel <a class="header-anchor" href="#kestrel" aria-label="Permalink to “Kestrel”">​</a></h3><ul><li>Fast, open-source, cross-platform web server based on <code>libuv</code></li><li>It is a light weight web server, it can only execute the requests. So external web server is used to configure security, hashing, etc.</li><li>Not used directly in production in production</li></ul><h2 id="deployment-strategies" tabindex="-1">Deployment Strategies <a class="header-anchor" href="#deployment-strategies" aria-label="Permalink to “Deployment Strategies”">​</a></h2><ul><li><p>Windows/Azure using IIS: Copy binaries manually</p><ul><li>IIS acting as reverse proxy to Kestrel</li></ul></li><li><p>On a Linux server using Kestrel plus a reverse proxy like Apache or NGINX: Copy binaries manually</p></li><li><p>Azure app service: Copy binaries or continuous integration</p></li><li><p>Linux using Docker (or other containers): Kestrel on Docker container</p></li></ul><p>Launch settings:</p><ul><li>Profiles are configured with <code>Properties/launchSettings.json</code> (edit directly the JSON or project properties) <ul><li><p>Running an IIS simulates a deployment to a Windows server, using both IIS and Kestrel and tying them together with a reverse proxy.</p></li><li><p>Running in Kestrel is useful for development purposes because of all the extra logging that gets output in the console window.</p></li></ul></li></ul><p>There are 2 types of web servers:</p><ol><li><p>The external web server like (IIS, Apache, etc.) and internal web server hosted by the application like Kestrel. We can use any external or internal servers.</p></li><li><p>We use <em>Kestrel</em> as it has a first class support in ASP.NET Core.</p></li></ol><ul><li>Classic System relied heavily on <code>System.web</code>, which was tied to <em>IIS</em> and <em>IIS</em> is tied to windows.</li><li>That is the reason Classic System cannot be run on servers other than <em>IIS</em> or <em>Windows</em>.</li></ul><h3 id="portable-or-stand-alone-deployment" tabindex="-1">Portable or Stand-Alone Deployment <a class="header-anchor" href="#portable-or-stand-alone-deployment" aria-label="Permalink to “Portable or Stand-Alone Deployment”">​</a></h3><ul><li><p>.NET Core supports true side-by-side installation of the platform:</p><ul><li>Installation of additional versions won&#39;t affect previously installed versions</li></ul></li><li><p>Portable deployments rely on the framework pre-installed:</p><ul><li>Only deploy application-specific libraries</li></ul></li><li><p>Stand-alone deployments contain required:</p><ul><li>Application files</li><li>Framework (CoreFX, CoreCLR) files</li></ul></li></ul><h2 id="environments" tabindex="-1">Environments <a class="header-anchor" href="#environments" aria-label="Permalink to “Environments”">​</a></h2><ul><li>Development</li><li>Testing</li><li>Staging (Production like)</li><li>Production</li></ul><p><code>IWebHostEnvironment</code> determines which environment it&#39;s running in by examining an environment variable called <code>ASPNETCORE_ENVIRONEMT</code></p><ul><li>This environment variable value is saved in <code>Properties/launchSettings.json</code></li></ul><h2 id="project-dependencies" tabindex="-1">Project Dependencies <a class="header-anchor" href="#project-dependencies" aria-label="Permalink to “Project Dependencies”">​</a></h2><p>The <code>.csproj</code> file defines:</p><ul><li>The dependencies for your application</li><li>What framework you&#39;re building against</li><li>It also can be used to include or exclude additional files from the publishing process. Such as static files that are outside the <code>wwwroot</code> folder</li><li>Static files placed outside the <code>wwwroot</code> folder will not be automatically included in the published site</li></ul><p>To add these files: These settings will be included in every publish profile</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">ItemGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">   &lt;!-- INCLUDE FILES --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">ResolvedFileToPublish</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> Include</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">README.md</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">RelativePath</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">wwwroot\\README.md</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">RelativePath</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">ResolvedFileToPublish</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">   &lt;!-- EXCLUDE FILES --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">Content</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> Update</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">wwwroot\\**\\*.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> CopyToPublishDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Never</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">Content</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">ItemGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span></code></pre></div><h2 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-label="Permalink to “HTTPS”">​</a></h2><ol><li><p>HTTPS on edge servers (Kestrel):</p><ul><li>ASP.NET Core project templates use Kestrel by default when not hosted with IIS. In <code>Program.cs</code>: <ul><li><p>(v3+) The <code>ConfigureWebHostDefaults</code> method calls <code>UseKestrel</code> internally:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> args</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">   CreateHostBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> IHostBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> CreateHostBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> args</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">   Host</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">CreateDefaultBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">   .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">ConfigureWebHostDefaults</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">webBuilder</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">      webBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseStartup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Startup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">   });</span></span></code></pre></div></li><li><p>(v6+) The <code>WebApplication.CreateBuilder</code> method calls <code>UseKestrel</code> internally:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> WebApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">CreateBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> builder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Hello World!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span></code></pre></div></li></ul></li></ul><p>To add Client certificate:</p><ol><li><p>Create a certificate</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">makecert</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -sv</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [YourName].pvk -n </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">CN=[YourCN]</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">YourCertName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">.cer -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># you will be prompted for a password (twice)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">pvk2pfk</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -pvk</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [YourName].pvk -spc </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">YourCertName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">.cer -pfx </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">YourName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">.pfx -pi </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># pvk2pfx gets installed to %ProgramFiles(x86)%Windows Kits\\10\\bin\\10.0.16299.0\\x64</span></span></code></pre></div></li><li><p>Add SSL configurations:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">   public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> args</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">      var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> cert</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> X506Certificate2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">PfjEnterprises.pfx</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Secrets</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">      var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> host</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> WebHostBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">            // .UseKestrel()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseKestrel</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">cfg</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> cfg</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseHttps</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">cert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseUrls</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">http://_:6001;https://_:6002</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseContentRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Directory</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">GetCurrentDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseIISIntegration</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseStartup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Startup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseApplicationInsights</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">      host</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>Using SSL Locally</p></li></ol></li><li><p>HTTPS on reverse proxy servers (Apache or Nginx): Instead of copying a certificate to and adding the right configuration to each server, you only need to configure the certificate at the reverse proxy level.</p><ul><li><p>When a new connection arrives, the proxy handles the HTTPS connection, then it turns around and makes an unencrypted HTTP connection internally to your web servers.</p></li><li><p>That way your web servers let the proxy do all the work and don&#39;t have to worry about HTTPS and certificates and encryption.</p></li><li><p>Their responses are relayed back over HTTPS by the proxy.</p></li><li><p>The proxy or load balancer will include one or more headers on the internal HTTP connection so that your web servers can understand if requests started on HTTPS.</p></li><li><p>It&#39;s important to configure ASP.NET Core to look for these forwarded headers:</p><ul><li><code>X-Forwarded-For: 203.0.113.195</code></li><li><code>X-Forwarded-Host: example.io</code></li><li><code>X-Forwarded-Proto: https</code></li></ul></li><li><p><code>ForwardedHeadersMiddleware</code>, reads these headers and fills in the associated fields on <code>HttpContext</code>.</p></li><li><p>Forwarded Headers Middleware is enabled by default by IIS Integration Middleware when the app is hosted out-of-process behind IIS and the ASP.NET Core Module.</p></li><li><p>For other proxies: <strong>Forwarded Headers Middleware should run before other middleware</strong>.</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> ConfigureServices</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">IServiceCollection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> services</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    services</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Configure</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">ForwardedHeadersOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">       options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">ForwardedHeaders</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">             ForwardedHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">XForwardedFor</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> ForwardedHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">XForwardedProto</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Configure</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">IApplicationBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> IWebHostEnvironment</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseForwardedHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span></code></pre></div></li></ul></li></ol><h2 id="deploying-in-iis" tabindex="-1">Deploying In IIS <a class="header-anchor" href="#deploying-in-iis" aria-label="Permalink to “Deploying In IIS”">​</a></h2><p>Setup IIS:</p><ol><li>Install IIS (if necessary)</li><li>Install .NET Core hosting bundle</li><li>Restart IIS</li></ol><p>Create a Site and Application Pool:</p><ul><li><p>Open IIS Manager</p></li><li><p>Create a new site (Sites --&gt; Add Website)</p><ul><li>Site Name:</li><li>Application Pool: (site name)</li><li>Physical path: (path of the files and binaries of the website)</li><li>Host name: (localhost)</li></ul></li><li><p>Modify the new Application Pool:</p><ul><li>Basic Settings --&gt; .NET CLR Version: No Manage Code</li><li>For ASP.NET Core, IIS will not actually be hosting or running any of the application code itself, unlike previous versions. This will be managed by Kestrel, IIS needs to simply forward along requests</li></ul></li></ul><p>Setup Data Protection:</p><ul><li><p>ASP.NET Core uses the <em>Windows Data Protection API (DPAPI)</em> to encrypt and store keys that are used for authentication in your application. Windows DPAPI isn&#39;t intended for use in web applications</p></li><li><p>When hosting your application with IIS, you&#39;ll need to run a small script to create a registry hive for these keys, otherwise the keys will be regenerated when you restart the application or your server, which will invalidate any user sessions or cookies that were encrypted with the previous old keys</p></li></ul><p><a href="https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/?view=aspnetcore-3.1#data-protection" target="_blank" rel="noreferrer">Data protection</a></p><ul><li>Download the <a href="https://github.com/dotnet/AspNetCore/blob/main/src/DataProtection/Provision-AutoGenKeys.ps1" target="_blank" rel="noreferrer">Provision-AutoGenKeys.ps1</a> script</li><li>Run this script in admin mode: <ul><li><p>Now elevate this PowerShell window to give it the remote signed execution policy, which allows the execution of that script</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">powershell </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">ExecutionPolicy RemoteSigned</span></span></code></pre></div></li><li><p>Execute the script:</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">.\\Provision</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">AutoGenKeys.ps1 </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> of</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> the</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> site</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span></code></pre></div></li></ul></li></ul><p>Publishing Application:</p><ol><li><p>With Visual Studio:</p><ul><li><p>Open the Publish wizard (Create a publish profile)</p></li><li><p>Pick a publish target:</p><ul><li>Example: Folder --&gt; select the folder mentioned in the IIS Application Pool --&gt; Physical path</li></ul></li></ul></li><li><p>Via the CLI:</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># restore nuget packages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">dotnet restore</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">dotnet build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">dotnet publish </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">c Release</span></span></code></pre></div><ul><li>Binaries will be placed in <code>ProjectFolder/bin/Release/[CoreVersion]/publish/</code></li><li>Copy these files to the folder mentioned in the IIS Application Pool --&gt; Physical path</li></ul></li></ol><p><code>Web.config</code> file is generated when application is published:</p><ul><li>It is not used for the application configuration (as it was in ASP.NET Framework), <code>appsettings.json</code> is used now</li><li>IIS still needs <code>Web.config</code>, even if ASP.NET Core isn&#39;t using it</li><li>Configures the ASP.NET Core module (reverse proxy)</li><li>Is automatically created for you by <code>dotnet publish</code> or Visual Studio</li><li>Must be in the application root folder</li></ul><h2 id="deploying-to-azure" tabindex="-1">Deploying To Azure <a class="header-anchor" href="#deploying-to-azure" aria-label="Permalink to “Deploying To Azure”">​</a></h2><ul><li>Create an Azure account</li><li>Install Azure SDK for Visual Studio</li></ul><p>Azure App Service:</p><ul><li><p>It is a manage hosting service for your application</p></li><li><p>Open the Publish wizard (Create a publish profile)</p></li><li><p>Pick a publish Profile --&gt; Microsoft Azure App Service --&gt; Login</p></li><li><p>Create a new resource group, new App Service plan</p></li><li><p>Publish --&gt; Visual Studio will deploy the application to Azure</p></li></ul><p>Setup Continuous Deployment from source control repository:</p><h2 id="deploying-to-linux" tabindex="-1">Deploying To Linux <a class="header-anchor" href="#deploying-to-linux" aria-label="Permalink to “Deploying To Linux”">​</a></h2><ul><li>ASP.NET Core applications can run directly on Linux</li></ul><ol><li><p>Install .NET Core Runtime packages for Linux machine</p></li><li><p>Use dotnet CLI to build, run and publish your application</p></li><li><p>Copy the build artifacts (files and directories) to the <code>/var/websites</code> or <code>/var/wwwroot</code> directory</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> publish/</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> /var/websites/HelloCoreWorld/</span></span></code></pre></div></li><li><p>Run the application: <code>dotnet HellCoreWorld.dll</code></p></li><li><p>This will start the Kestrel server</p></li></ol><p>Adding Nginx Reverse Proxy:</p><ol><li><p>Install Nginx on the Linux machine</p></li><li><p>Start Nginx:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> start</span></span></code></pre></div></li><li><p>Configure Nginx:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> /etc/nginx/sites-available/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Take a backup of default configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> default.backup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Update the configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> default</span></span></code></pre></div><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># simple reverse-proxy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">       80</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  example.io *.example.io</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">        http://127.0.0.1:5000</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  Upgrade </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  Connection keep-alive</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  Host </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_cache_bypass </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  X-Forwarded-For </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">proxy_add_x_forwarded_for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  X-Forwarded-Proto </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre></div></li><li><p>Text the configurations: <code>sudo nginx -t</code></p></li><li><p>On a production server, it&#39;s important to set the <code>server_name</code> property as well to the domain name that your site will be hosted on.</p></li><li><p>Reload Nginx: <code>sudo nginx -s reload</code></p></li></ol><p>Nginx starts up automatically when the machine boots, but Kestrel and the application have to be started manually:</p><ul><li>Use <code>systemd</code> tool to make sure that Kestrel starts hosting your application whenever the machine boots</li></ul><ol><li><p>Create a service definition file:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> /etc/systemd/system/hellocoreworld.service</span></span></code></pre></div><div class="language-systemd"><button title="Copy Code" class="copy"></button><span class="lang">systemd</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">Example ASP.NET web app running </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Ubuntu</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">WorkingDirectory</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">/var/websites/HelloCoreWorld</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">/usr/bin/dotnet /var/websites/HelloCoreWorld/HelloCoreWorld.dll</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">Restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">RestartSec</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">SyslogIdentifier</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">hellocoreworld</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">user or serviceaccount</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">ASPNETCORE_ENVIRONEMT</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">Production</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">DOTNET_PRINT_TELEMETRY_MESSAGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">multi-user.target</span></span></code></pre></div></li><li><p>Enable the service</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> hellocoreworld.service</span></span></code></pre></div></li><li><p>Start the service:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> hellocoreworld.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Check the status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> hellocoreworld.service</span></span></code></pre></div></li></ol><h2 id="deploying-with-docker" tabindex="-1">Deploying With Docker <a class="header-anchor" href="#deploying-with-docker" aria-label="Permalink to “Deploying With Docker”">​</a></h2><p>On normal server to host any application, things need to be done, Like:</p><ul><li>Install .NET</li><li>Install 3rd-party libraries</li><li>Set up Nginx</li><li>Add Environment Variables</li><li>Run application</li></ul><p>These things need to be done on each server, thus adding and maintaining server becomes a complex task</p><p>Benefits of Docker:</p><ul><li>Servers are standardized</li><li>Declarative server and application configuration recipe</li><li>Docker Image = fundamental unit of deployment</li><li>Containers can be duplicated easily</li></ul><ol><li><p>Install Docker</p></li><li><p>Create the <code>Dockerfile</code> at the root of the project</p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># syntax=docker/dockerfile:1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> mcr.microsoft.com/dotnet/sdk:6.0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> build-env</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Copy csproj and restore as distinct layers</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> *.csproj ./</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> dotnet restore</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Copy everything else and build</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> .. ./</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> dotnet publish -c Release -o out</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Build runtime image</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> mcr.microsoft.com/dotnet/aspnet:6.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> /app</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> --from=build-env /app/out .</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">&quot;dotnet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">&quot;hellocoreworld.dll&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">]</span></span></code></pre></div></li><li><p>Build the Docker Image:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [username/image </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name]</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># check if image was created</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ls</span></span></code></pre></div></li><li><p>Run the newly created Docker Image:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># in development environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> 5000:5000</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [image </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> 5000:5000</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [image </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># monitor docker status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># docker ps --format &#39;table {{.Names}}\\t{{.Images}}\\t{{.Status}}\\t{{.Ports}}&#39;</span></span></code></pre></div></li><li><p>Shut the container down:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [image </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name]</span></span></code></pre></div></li></ol><p>Create Nginx Docker Containers:</p><ol><li><p>Create a <code>Dockerfile</code> for Nginx in the project: <code>/nginx/Dockerfile</code></p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> nginx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> nginx.conf /etc/nginx/nginx.conf</span></span></code></pre></div></li><li><p>Create <code>nginx.conf</code> file:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">events</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> worker_connections </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> server</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">     listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">       80</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">     server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  example.io *.example.io</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">     location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">        http://kestrel:5000</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  Upgrade </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  Connection keep-alive</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  Host </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_cache_bypass </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  X-Forwarded-For </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">proxy_add_x_forwarded_for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">         proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  X-Forwarded-Proto </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre></div></li><li><p>Docker Compose needs a set of instructions that tells Compose how to structure our multi-container application. Create <code>docker-compose.yml</code> file at the root of the project;</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">ngnix</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ./ngnix</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">80:80</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  links</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> kestrel:kestrel</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">kestrel</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> .</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">5000</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre></div></li><li><p>Run <code>docker-compose</code> from the root of the project</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> up</span></span></code></pre></div></li></ol><p>Save the images that we created, so that it can be shared and loaded on other machines:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> save</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -o</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [output-image-name].tar </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">image-name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># load image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> load</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [output-image-name].tar</span></span></code></pre></div>`,69)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};