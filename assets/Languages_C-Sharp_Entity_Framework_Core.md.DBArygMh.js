import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Entity Framework Core","description":"Entity Framework uses EDM (Entity Data Model) for all database-related operations","frontmatter":{"title":"Entity Framework Core","description":"Entity Framework uses EDM (Entity Data Model) for all database-related operations"},"headers":[],"relativePath":"Languages/C-Sharp/Entity_Framework_Core.md","filePath":"Languages/C-Sharp/Entity_Framework_Core.md","lastUpdated":1756574703000}`);var a={name:`Languages/C-Sharp/Entity_Framework_Core.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="entity-framework-core" tabindex="-1">Entity Framework Core <a class="header-anchor" href="#entity-framework-core" aria-label="Permalink to “Entity Framework Core”">​</a></h1><p>Entity Framework uses EDM (Entity Data Model) for all database-related operations.</p><p>EF Database Context is a bridge between the Entity Classes (C# classes) and the database tables (SQL).</p><p>ORM (Object Relational Mapper):</p><ul><li>Allow the computer to generate database tables based on classes defined in the application</li><li>Database is updated using migrations</li><li>Entity Framework is Microsoft&#39;s ORM</li><li>Simple for basic applications</li></ul><p>Data Access Object (DAO) (Old way):</p><ul><li>Manually create tables</li><li>Traditional method of database access</li><li>Write your own SQL statements</li><li>Database managers (DBA&#39;s) prefer DAOs</li><li>Provides more visibility on finding problems</li></ul><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to “Setup”">​</a></h2><ul><li><p>Few Packages are need to work with EF Core:</p><ul><li><p><a href="#database-providers">DB Provider</a> Package: Specific to the DB that is being used:</p><ul><li><code>Microsoft.EntityFrameworkCore.SqlServer</code> if the DB is SQL Server</li><li>The other dependent packages are installed automatically such as <code>Relational</code>, <code>EntityFrameworkCore</code></li></ul></li><li><p>Type of DB: Relational, NoSQL, etc.</p><ul><li><code>Microsoft.EntityFrameworkCore.Relational</code> as SQL Server is RDBMS</li></ul></li><li><p><code>Microsoft.EntityFrameworkCore</code> package contains the EF Core functionality</p></li></ul></li><li><p>Create the <a href="#dbcontext-class">DbContext class</a>:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DbContext</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">DbContextOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> base</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // Model (Entity)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DbSet</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Book</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Books</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>Register and configure the <code>DbContext</code> class with a DB provider to the DI system in the <code>Startup.cs</code> file:</p><ul><li><code>AddDbContextPool</code> has better performance than <code>AddDbContext</code></li><li>Don&#39;t use <code>AddDbContextPool</code> if private properties are used</li></ul><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> ConfigureServices</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">IServiceCollection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> services</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // In-memory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    services</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">AddDbContextPool</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">TodoContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> opt</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseInMemoryDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">TodoList</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // SQLite</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    services</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">AddDbContextPool</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseSqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">$&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Data Source=</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">DbPath</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // MySQL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    services</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">AddDbContextPool</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">UseMySQL</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">GetConnectionString</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">DefaultConnectionString</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul><h2 id="dbcontext-class" tabindex="-1">DbContext Class <a class="header-anchor" href="#dbcontext-class" aria-label="Permalink to “DbContext Class”">​</a></h2><p>To use <code>DbContext</code> class in our application, create a class that derives from the <code>DbContext</code> class:</p><ul><li>Pass configuration information to the <code>DbContext</code> using <code>DbContextOptions</code> instance</li><li>Think of it as the database</li></ul><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DbContext</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">DbContextOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">AppDbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> base</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // Model (Entity)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DbSet</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Book</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Books</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li><p>The <code>DbContext</code> class includes a <code>DbSet&lt;TEntity</code> property for each entity in the model</p></li><li><p>Think of it as the table in the database</p></li><li><p>This <code>DbSet</code> property <code>Books</code> will be used to query and save instances of the Book class</p><ul><li><p>The name of this <code>DbSet</code> property corresponds to the table name EF Core will create</p></li><li><p>The columns of this table will correspond to the properties of <code>Books</code> class</p></li></ul></li><li><p>The LINQ queries against the <code>DbSet&lt;TEntity&gt;</code> will be translated into queries against the underlying database</p></li></ul><h2 id="database-providers" tabindex="-1">Database Providers <a class="header-anchor" href="#database-providers" aria-label="Permalink to “Database Providers”">​</a></h2><p>EF Core wide verity of databases.</p><p>Sample list:</p><ul><li><p>SQLite: <code>Microsoft.EntityFrameworkCore.Sqlite</code></p></li><li><p>SQL Server</p></li><li><p>MySQL</p></li><li><p>Maria</p></li><li><p>Oracle</p></li><li><p>PostgreSQL</p></li><li><p>In-memory: The In-Memory provider was not designed for use outside of <strong>testing environments</strong> and should never be used as such: <code>Microsoft.EntityFrameworkCore.InMemory</code></p></li></ul><h2 id="repository-pattern" tabindex="-1">Repository Pattern <a class="header-anchor" href="#repository-pattern" aria-label="Permalink to “Repository Pattern”">​</a></h2><p>It is an abstraction of the data access layer, it hides the details of how exactly the data is saved or retrieved from the underlying data source (such as databases, flat files, web services, etc.)</p><ul><li>The details of how the data is stored and retrieved is in the respective repository</li><li>It provides a single point of entry for retrieving and manipulating data, allowing the rest of the application to be decoupled from the specifics of the data storage layer</li></ul><h2 id="migrations" tabindex="-1">Migrations <a class="header-anchor" href="#migrations" aria-label="Permalink to “Migrations”">​</a></h2><p>EF Core Migrations: Provides a way to incrementally update the database schema to keep in sync with the application&#39;s data model while preserving existing data in the database.</p><ul><li><p>In other words, Migration keeps the database schema and application model classes in sync</p></li><li><p>Install <code>Microsoft.EntityFrameworkCore.Tools</code> for EF Core Migrations</p></li><li><p>Add the connection string into <code>appsettings.json</code> file. For MySQL it is <code>Server=localhost;port=3306;user=;database=;password=</code></p></li><li><p>Run migration: <code>Add-Migration InitialDbMigration</code></p></li><li><p>It will create a class with the name provided during migration which inherits from <code>Migration</code></p></li><li><p>It will have methods such as <code>CreateTable</code> with the name provide in the connection string</p></li><li><p>Update the database: <code>Update-Database</code></p></li></ul><ol><li><p>Add a new migration:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Help command</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Get-Help</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> about_EntityFrameworkCore</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># string can be anything meaningful</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># old way: Enable migrations</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Add-Migration</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">initialSetup</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># using \`dotnet\` CLI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ef</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">initialSetup</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre></div><ul><li>The above command create a directory called &quot;Migrations&quot; at the root of the project</li><li>Inside this directory a new files are created: <ul><li><p><code>XXXXX_[name of migration].cs-</code>: The main migrations file. It contains the operations necessary to apply the migration (in <code>Up</code>) and to revert it (in <code>Down</code>).</p></li><li><p><code>XXXXX_[name of migration].Designer.cs</code>: The migrations metadata file. Contains information used by EF.</p></li><li><p><code>AppDbContextModelSnapshot.cs</code>: A snapshot of your current model. Used to determine what changed when adding the next migration.</p></li></ul></li></ul></li><li><p>Update the database to the last migration or to a specified migration.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># using \`dotnet\` CLI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ef</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> database</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># update database to the last migration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Update-Database</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># update database to a specific migration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Update-Database</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> [migration </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> migration</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> id]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># reverts all migrations</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Update-Database</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span></span></code></pre></div></li></ol><h3 id="remove-migration" tabindex="-1">Remove-Migration <a class="header-anchor" href="#remove-migration" aria-label="Permalink to “Remove-Migration”">​</a></h3><p>Removes the last migration (rolls back the code changes that were done for the migration):</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Remove-Migration</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># using \`dotnet\` CLI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ef</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> remove</span></span></code></pre></div><ul><li><p>Removing migration that has already been applied to the database will throw error</p></li><li><p>To undo the applied migrations use <code>Update-Database</code> command with the name of the migration previous to the one that needs to be reverted</p></li><li><p>Then run <code>Remove-Migration</code> to remove the migration</p></li></ul><h2 id="data-seeding" tabindex="-1">Data Seeding <a class="header-anchor" href="#data-seeding" aria-label="Permalink to “Data Seeding”">​</a></h2><p>Data seeding is the process of populating a database with an initial set of data.</p><p>There are several ways this can be accomplished in EF Core:</p><ol><li><p>Model seed data:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> OnModelCreating</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">ModelBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Entity</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">HasData</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> BlogId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Url</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">http://sample.com</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Id needs to be provided</li></ul></li><li><p>Manual migration customization:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> OnModelCreating</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">ModelBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    migrationBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">InsertData</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        table</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Blogs</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        columns</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Url</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        values</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">http://generated.com</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>Custom initialization logic:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> context</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DataSeedingContext</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    context</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Database</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">EnsureCreated</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> testBlog</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> context</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Blogs</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">FirstOrDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Url</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">http://test.com</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">testBlog</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">        context</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Blogs</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Url</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">http://test.com</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    context</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">SaveChanges</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ol><p>Perform migration and update database.</p><p><em>Example:</em> Create an extension class for data seeding, this keeps the <code>DbContext</code> class clean:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DataSeed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ModelBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    modelBuilder.Entity&lt;Blog&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">HasData</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> { BlogId </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Url </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">http://sample.com</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> }</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> { BlogId </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Url </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">https://example.io</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> OnModelCreating</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">ModelBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    migrationBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">DataSeed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="cascading-referential-integrity-constraint" tabindex="-1">Cascading referential integrity constraint <a class="header-anchor" href="#cascading-referential-integrity-constraint" aria-label="Permalink to “Cascading referential integrity constraint”">​</a></h2><ul><li>No Action (Update/Delete action cannot be performed prevented)</li><li>Cascade</li><li>Set NULL</li><li>Set Default</li></ul><p>On Update: default is No Action On Delete: default is Cascade</p><h2 id="model-class" tabindex="-1">Model Class <a class="header-anchor" href="#model-class" aria-label="Permalink to “Model Class”">​</a></h2><p>Class properties can have <a href="#annotations">annotations</a></p><h2 id="annotations" tabindex="-1">Annotations <a class="header-anchor" href="#annotations" aria-label="Permalink to “Annotations”">​</a></h2><ul><li><p>Annotations as derived from <code>System.ComponentModel.DataAnnotations</code></p></li><li><p>Not all database related properties can be configured using annotations</p></li><li><p>For more control use <code>OnModelCreating</code> method</p><p><em>Example:</em></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> OnModelCreating</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">ModelBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">   modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Entity</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Property</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">HasMaxLength</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">IsRequired</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// we can achive the same using annotations on the property \`Title\` in model class \`Blog\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">MaxLength</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Required</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span></code></pre></div></li></ul><h2 id="fluent-api" tabindex="-1">Fluent API <a class="header-anchor" href="#fluent-api" aria-label="Permalink to “Fluent API”">​</a></h2><p>Fluent API is an advanced way of specifying model configuration that covers everything that data annotations can do in addition to some more advanced configuration not possible with data annotations.</p><ul><li>Fluent API is another way to configure your domain classes.</li></ul><p>If both Data annotations and Fluent API are use the precedence is:</p><ul><li>Fluent API &gt; Data Annotations &gt; Default Conventions</li></ul><p>The Code First Fluent API is most commonly accessed by overriding the OnModelCreating method on your derived DbContext.</p><ul><li>Fluent API provides more functionality for configuration than DataAnnotations. Fluent API supports the following types of mappings.</li></ul><h2 id="data-transfer-object-dto" tabindex="-1">Data Transfer Object (DTO) <a class="header-anchor" href="#data-transfer-object-dto" aria-label="Permalink to “Data Transfer Object (DTO)”">​</a></h2><p>The contract enabled between the client and the service</p>`,52)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};