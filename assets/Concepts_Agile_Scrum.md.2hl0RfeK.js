import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Scrum","description":"","frontmatter":{},"headers":[],"relativePath":"Concepts/Agile/Scrum.md","filePath":"Concepts/Agile/Scrum.md","lastUpdated":1756574703000}`);var a={name:`Concepts/Agile/Scrum.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="scrum" tabindex="-1">Scrum <a class="header-anchor" href="#scrum" aria-label="Permalink to “Scrum”">​</a></h1><p>An <a href="./Agile.html">Agile</a> framework.</p><p>The term <strong>Scrum</strong> was first introduced by professors Hirotaka Takeuchi and Ikujiro Nonaka in their article <em>&quot;The New New Product Development Game&quot;</em> at Harvard Business Review in 1986.</p><p>They borrowed the name Scrum from the game of rugby, to stress the importance of teamwork to deal with a complex problem.</p><p>Jeff Sutherland implemented first Scrum project at the Easel Corporation in 1993.</p><p>Ken Schwaber and Jeff Sutherland co-present a paper called &quot;The Scrum Development Process&quot; at the OOPSLA Conference in 1995</p><h2 id="the-scrum-process" tabindex="-1">The Scrum Process <a class="header-anchor" href="#the-scrum-process" aria-label="Permalink to “The Scrum Process”">​</a></h2><p>In Scrum, you break down the phases of your project into smaller pieces that can be completed by a cross-functional team within a prescribed time period (called a <strong>sprint</strong>)</p><ul><li><p>User Stories (Product Owner) --&gt; Sprint Backlog --&gt; Planning (Team) --&gt; Implementation (24 hours) --&gt; Review (Scrum Master) --&gt; Retrospect --&gt; Definition of Done --&gt; Shippable Product Increment</p></li><li><p>The duration of the sprint in Scrum is anywhere from <strong>2 to 4 weeks to almost a month</strong></p></li><li><p><strong>Once the sprint begins, you aren&#39;t allowed to add any new requirements</strong></p></li><li><p>Prioritized Backlog (PO discuss with Developers)</p></li><li><p>Sprint Planning Meeting (Run by Scrum Master attended by PO, Developers): Team pulls a small chunk from the top of Product backlog work items to work on during the sprint. That chunk becomes the Sprint Backlog</p></li><li><p>Daily Scrum (meeting to access the progress): Scrum board is used as a visual representation of the workflow. Scrum board:</p><ul><li>To Do</li><li>Build</li><li>Test</li><li>Done</li></ul></li><li><p>Sprint Review: Held by development team to demonstrate the work accomplished during the sprint to stakeholders</p></li><li><p>Sprint Retrospective: To discuss What went right or wrong, and areas for improvements for further sprints. Scrum teams follow an inspect and adapt approach (improve continuously taking lessons from their previous sprints)</p></li></ul><h3 id="roles-and-responsibilities" tabindex="-1">Roles and Responsibilities <a class="header-anchor" href="#roles-and-responsibilities" aria-label="Permalink to “Roles and Responsibilities”">​</a></h3><ul><li><p>Scrum is self managed and everybody is equal.</p></li><li><p>Business Owner and End Users --&gt; Product Owner (Optimizes the value of the product) --&gt; Scrum Master (Servant-leader of the scrum team) and Development Team (Self-organized cross-functional group)</p></li></ul><h2 id="scrum-vs-kanban" tabindex="-1">Scrum vs Kanban <a class="header-anchor" href="#scrum-vs-kanban" aria-label="Permalink to “Scrum vs Kanban”">​</a></h2><ul><li><p>Scrum: is more structured, allows for forecasting emphasizes teamwork, accountability, and iterative progress toward a well-defined goal</p></li><li><p>Kanban: is a bit more flexible, and it is a visual system for managing work as it moves through a continuous process</p></li></ul><h3 id="kanban" tabindex="-1">Kanban <a class="header-anchor" href="#kanban" aria-label="Permalink to “Kanban”">​</a></h3><p>Kanban is highly visual way of executing agile.</p><p>A Toyota engineer, named Taiichi Ohno, created a systme that used paper cards for signaling and tracking demand in his factory, naming the new system Kanban in 1940</p><p>The way the items were restocked in the marketplaces inspired Taiichi. <strong>If there are empty shelves in the shop, then more inventory is ordered to meet the demand again</strong>.</p><p>Taiichi brought this <strong>JIT (just-in-time) principle</strong> to the Toyota facilities to ramp up the car development process</p><p>In 2004, David J. Anderson was the first to apply <strong>Kanban to IT, software development</strong></p><p>The Kanban Process:</p><p>Kanban <strong>focuses on maintaining a continuous task flow and continuous delivery</strong>. At the same time, the team is never given more work than it can handle. This is accomplished through the two primary principles of Kanban: <strong>Visualize your work, Limiting Work-in-progress</strong></p><h3 id="similarities" tabindex="-1">Similarities <a class="header-anchor" href="#similarities" aria-label="Permalink to “Similarities”">​</a></h3><ul><li><p><strong>Pull System</strong>: With pull system you create a workflow where work is pulled only if there is a demand for it</p></li><li><p><strong>Limit Work-in-progress (WIP)</strong>: Limiting WIP will allow teams to identify bottlenecks and improves throughput</p></li><li><p><strong>Break Down Complex Tasks</strong>: They allow large and complex tasks to be broken down and completed efficiently</p></li><li><p><strong>High Value on Continual Improvement</strong>: They place a high value on continual improvement, optimization of the work and the process</p></li></ul><h3 id="differences" tabindex="-1">Differences <a class="header-anchor" href="#differences" aria-label="Permalink to “Differences”">​</a></h3><table tabindex="0"><thead><tr><th>Scrum</th><th>Kanban</th></tr></thead><tbody><tr><td>Scrum has <strong>sprints</strong>. The Sprint is a timebox of one month or less during which the team produces a potentially shippable product increment</td><td>Kanban Flow, there are <strong>no required time boxes or iterations</strong>. It focuses on maintaining a continuous task flow and continuous delivery.</td></tr><tr><td>Scrum has a set of mandatory roles that you must implement. The Product Owner, Scrum Master, and Team Members</td><td>Under Kanban, no set roles are prescribed. Although, there might still be an agile coach.</td></tr><tr><td>The team commits to a specific amount of work for each iteration. If the capacity is not measured accurately, sprint might fail.</td><td>Commitment is based on capacity. Work-in-progress (WIP) limits prevent team members from working on multiple tasks</td></tr><tr><td>Planning happens iteratively at the <strong>beginning of each sprint</strong></td><td>With Kanban, there&#39;s close to 0 planning involved. It includes <strong>Just-In-Time planning</strong>, instead of planning for a bigger time period</td></tr><tr><td>Scrum <strong>limits work in progress per iteration</strong>. The development team has to commit to the number of tasks that they are ready to accomplish during the sprint</td><td>Limits work in progress by assigning a <strong>limit to the number of cards in any active-work columns</strong>. When the limit is met, no new work can enter the column until a task is completed.</td></tr><tr><td>Once the <strong>sprint begins, you aren&#39;t allowed to add any new requirements</strong>. When more tasks than planned are added, <strong>scope creep</strong> occurs</td><td>You can <strong>insert or add tasks constantly to the backlog</strong> and existing cards can get blocked or removed all together based on prioritization</td></tr><tr><td>Scrum measures productivity using a metric called <strong>velocity</strong>, which is the number of story points completed in a sprint. Uses Burndown chart and Velocity chart</td><td><strong>Lead time and cycle time</strong> are important metrics for Kanban teams. They are used to calculate the average amount of time that it takes for a task to move from start to finish. Then there is CFD.</td></tr><tr><td>On a Scrum Board, the columns are labeled to show the workflow states. At the beginning of the sprint all the stories are added to the board.</td><td>Kanban board also has the columns labeled to show the workflow states. The difference is that Kanban board has WIP limits visualized on it.</td></tr><tr><td>Ideal for projects where you want to move fast but you need some degree of planning and coordination</td><td>Kanban is the best choice when you have a lot of incoming tasks with changing priorities</td></tr><tr><td>Goal-driven projects with fixed deliverables</td><td>It is better suitable for mature teams</td></tr><tr><td>Suitable for non-mature teams</td><td>Teams involved in industries such as marketing, software development, or content creation can benefit from Kanban</td></tr></tbody></table><p>Summary:</p><table tabindex="0"><thead><tr><th>Items</th><th>Scrum</th><th>Kanban</th></tr></thead><tbody><tr><td>Cadence</td><td>Regular fixed length sprints</td><td>Continuous flow</td></tr><tr><td>Release Methodology</td><td>At the end of each sprint</td><td>Continuous delivery</td></tr><tr><td>Key Metrics</td><td>Velocity</td><td>Lead time, cycle time, WIP</td></tr><tr><td>Roles</td><td>Product owner, scrum master, development team</td><td>No required roles</td></tr><tr><td>Teams</td><td>Must be cross-functional</td><td>Can be specialized</td></tr><tr><td>Modifications</td><td>Changes during the sprint are strongly discouraged</td><td>Change can happen at any time</td></tr><tr><td>WIP Limits</td><td>Limits work in progress per iteration</td><td>Limits WIP by limiting the number of cards in any active-work columns</td></tr><tr><td>Commitment</td><td>Teams are required to commit a specific amount of work</td><td>Commitment not necessary it is optional for teams</td></tr><tr><td>Storyboard</td><td>Scrum board is rest after every sprint</td><td>Kanban board is persistent, low continues for as long as the project continues</td></tr></tbody></table><h2 id="scrumban" tabindex="-1">SCRUMBAN <a class="header-anchor" href="#scrumban" aria-label="Permalink to “SCRUMBAN”">​</a></h2><p>Scrumban is a project management framework that combines important features of two popular agile methodologies: <strong>Scrum and Kanban</strong></p><ul><li>Scrumban provides the structure of Scrum with the flexibility and visualization of Kanban, making it a highly versatile approach to workflow management.</li><li>Was initially created as a way to transition from Scrum to Kanban</li></ul>`,30)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};