import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Code Blocks","description":"","frontmatter":{"prev":"./Images","next":"./Tables"},"headers":[],"relativePath":"Languages/Markdown/Code.md","filePath":"Languages/Markdown/Code.md","lastUpdated":1666469073000}`);var a={name:`Languages/Markdown/Code.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n('<h1 id="code-blocks" tabindex="-1">Code Blocks <a class="header-anchor" href="#code-blocks" aria-label="Permalink to “Code Blocks”">​</a></h1><p>Code blocks are used to insert raw code.</p><p>Some markdown engines support syntax highlighting.</p><ul><li><p>Use 4 spaces or 1 tab</p></li><li><p>Inline code blocks using ```</p></li></ul><p>This is a <code>inline Code Blocks</code><br> This contains &lt;&gt; in <code>&lt;blink&gt;</code><br> This contains &amp; in <code>&amp;blink</code></p><h2 id="syntax-highlighting" tabindex="-1">Syntax Highlighting <a class="header-anchor" href="#syntax-highlighting" aria-label="Permalink to “Syntax Highlighting”">​</a></h2><p>You can define the language to be used for syntax highlighting by adding name on the opening tag.</p><p>Like...</p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\`\\`\\`</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">javascript</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">var a = {};</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\`\\`\\`</span></span></code></pre></div>',9)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};