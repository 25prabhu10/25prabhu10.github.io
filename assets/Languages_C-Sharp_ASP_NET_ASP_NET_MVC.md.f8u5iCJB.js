import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"ASP.NET Framework MVC","description":"ASP.NET Framework is an open-source, server-side web-application framework","frontmatter":{"title":"ASP.NET Framework MVC","description":"ASP.NET Framework is an open-source, server-side web-application framework"},"headers":[],"relativePath":"Languages/C-Sharp/ASP_NET/ASP_NET_MVC.md","filePath":"Languages/C-Sharp/ASP_NET/ASP_NET_MVC.md","lastUpdated":1756574703000}`);var a={name:`Languages/C-Sharp/ASP_NET/ASP_NET_MVC.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="asp-net-framework" tabindex="-1">ASP.NET Framework <a class="header-anchor" href="#asp-net-framework" aria-label="Permalink to “ASP.NET Framework”">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to “Overview”">​</a></h2><p>ASP.NET Framework is an open-source, server-side web-application framework.</p><h2 id="model-view-controller" tabindex="-1">Model-View-Controller <a class="header-anchor" href="#model-view-controller" aria-label="Permalink to “Model-View-Controller”">​</a></h2><p>Model-View-Controller (MVC) is a software design pattern commonly used for developing user interfaces that divides the related program logic into three interconnected elements.</p><p><img src="/assets/mvc-flow.D0K2l-uV.svg" alt="mvc-flow"></p><h3 id="model" tabindex="-1">Model <a class="header-anchor" href="#model" aria-label="Permalink to “Model”">​</a></h3><p>Model represents the data and business logic.</p><ul><li><p>A model is a class with properties.</p></li><li><p>To add model: <code>Right-Click on Models --&gt; Add --&gt; Class --&gt; FilenameModel.cs</code></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// CustomerModel.cs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CustomerModel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> IsAlive</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // sets default value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span></code></pre></div></li></ul><h3 id="view" tabindex="-1">View <a class="header-anchor" href="#view" aria-label="Permalink to “View”">​</a></h3><p>View is the user interface.</p><ul><li><strong>Views is divided into layout and templates.</strong></li><li>The <em>Shared</em> folder in <em>Views</em> contains <em>_Layout.cshtml</em> (ref. <a href="#cshtml">CSHTML File</a>)</li></ul><h3 id="controller" tabindex="-1">Controller <a class="header-anchor" href="#controller" aria-label="Permalink to “Controller”">​</a></h3><p>Controller handles the user request. User interacts with View, which in-turn raises appropriate URL request, this request will be handled by a controller. The Controller renders View with the model data as a response.</p><ul><li><p>The controller returns views.</p></li><li><p>Default controller in ASP.NET is <em>HomeController.cs</em></p></li><li><p>Controller class inherits from System.Web.Mvc.Controller</p></li><li><p>Each public method in a controller is known as an <em>action method</em>.</p></li><li><p>To add controller: <code>Right-Click on Controllers --&gt; Add --&gt; Controller --&gt; MVC 5 ... Empty --&gt; FilenameController.cs</code></p><p>This automatically creates a empty folder called <em>FilenameController</em> in <em>Views</em>.</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// CustomerController.cs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CustomerController</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // GET: Customer</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ActionResult</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Index</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> View</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>To add View inside this new folder: <code>Right-Click on method name (Index()) --&gt; Add View</code></p></li><li><p>The first part in controller name ( i.e. <em>Home</em> in <em>HomeController</em>) is a folder inside <em>Views</em> folder, which intern contains views.</p><p><img src="/assets/home-controller.BonMqIiu.jpg" alt="Home Controller"></p></li></ul><h2 id="routing" tabindex="-1">Routing <a class="header-anchor" href="#routing" aria-label="Permalink to “Routing”">​</a></h2><p>Routes URL to pages.</p><ul><li>Routing file (<em>RouteConfig.cs</em>) resides in the <em>App_Start</em> folder.</li></ul><h2 id="bundling" tabindex="-1">Bundling <a class="header-anchor" href="#bundling" aria-label="Permalink to “Bundling”">​</a></h2><h2 id="cshtml" tabindex="-1">CSHTML <a class="header-anchor" href="#cshtml" aria-label="Permalink to “CSHTML”">​</a></h2><h2 id="razor-syntax" tabindex="-1">Razor Syntax <a class="header-anchor" href="#razor-syntax" aria-label="Permalink to “Razor Syntax”">​</a></h2><h2 id="nuget-net-package-manager" tabindex="-1">NuGet (.NET Package Manager) <a class="header-anchor" href="#nuget-net-package-manager" aria-label="Permalink to “NuGet (.NET Package Manager)”">​</a></h2><h2 id="error" tabindex="-1">Error <a class="header-anchor" href="#error" aria-label="Permalink to “Error”">​</a></h2><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Web.config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">system</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">web</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">customErrors</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">RemoteOnly</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">&gt;&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">customErrors</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">&gt;</span></span></code></pre></div><h2 id="web-api" tabindex="-1">Web API <a class="header-anchor" href="#web-api" aria-label="Permalink to “Web API”">​</a></h2><p>Controller inherit from <code>ApiController</code></p><ul><li><p><code>HttpResponseMessage</code>:</p><ul><li><p><em>Example:</em></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StudentsController</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ApiController</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> HttpResponseMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">CreateResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">HttpStatusCode</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">OK</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> students</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> HttpResponseMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">        var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> student</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> students</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">FirstOrDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">student</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">CreateErrorResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">HttpStatusCode</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">NotFound</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Student Not Found</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">CreateResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">HttpStatusCode</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">OK</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> student</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul></li><li><p><code>IHttpActionResult</code>:</p><ul><li><p>New introduced in Web API 2</p></li><li><p>Clean Code</p></li><li><p>Simpler Unit Testing</p></li><li><p><em>Example:</em></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StudentsController</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ApiController</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> IHttpActionResult</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">students</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> IHttpActionResult</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Get</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">        var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> student</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> students</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">FirstOrDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">student</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">            // return NotFound();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Content</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">HttpStatusCode</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">NotFound</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Student Not Found</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">student</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul></li></ul>`,27)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};