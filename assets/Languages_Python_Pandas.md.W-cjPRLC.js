import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Pandas","description":"A Python library for data manipulation and analysis","frontmatter":{"title":"Pandas","description":"A Python library for data manipulation and analysis","date":"2024-11-01T00:00:00.000Z","lastmod":"2024-11-01T00:00:00.000Z"},"headers":[],"relativePath":"Languages/Python/Pandas.md","filePath":"Languages/Python/Pandas.md","lastUpdated":1739650350000}`);var a={name:`Languages/Python/Pandas.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="pandas" tabindex="-1">Pandas <a class="header-anchor" href="#pandas" aria-label="Permalink to “Pandas”">​</a></h1><p>Pandas is a Python library for data manipulation and analysis</p><p>It provides fast, flexible, and expressive data structures designed to make working with &quot;relational&quot; or &quot;labelled&quot; data both easy and intuitive</p><p>Pandas is well suited for many different kinds of data:</p><ul><li>Tabular data with heterogeneously-typed columns, as in an SQL table or Excel spreadsheet</li><li>Ordered and unordered (not necessarily fixed-frequency) time series data</li><li>Arbitrary matrix data (homogeneously typed or heterogeneous) with row and column labels</li><li>Any other form of observational / statistical data sets. The data actually need not be labelled at all to be placed into a pandas data structure</li></ul><p>Pandas is built on top of NumPy</p><h2 id="installation-and-usage" tabindex="-1">Installation and Usage <a class="header-anchor" href="#installation-and-usage" aria-label="Permalink to “Installation and Usage”">​</a></h2><p>Install pandas using pip:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> pandas</span></span></code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to “Usage”">​</a></h3><p>Create a DataFrame from a dictionary:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">John</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Anna</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Peter</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Linda</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Location</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">New York</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Paris</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Berlin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">London</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Age</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 53</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 33</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> pd</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">DataFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">df</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span></code></pre></div><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to “Features”">​</a></h2><p>Here are just a few of the things that pandas does well:</p><ul><li><p>Easy handling of <strong>missing data</strong> (represented as <code>NaN</code>) in floating point as well as non-floating point data</p></li><li><p>Size mutability: columns can be <strong>inserted and deleted</strong> from DataFrame and higher dimensional objects</p></li><li><p>Automatic and explicit <strong>data alignment</strong>: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let <code>Series</code>, <code>DataFrame</code>, etc. automatically align the data for you in computations</p></li><li><p>Powerful, flexible <strong>group by</strong> functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data</p></li><li><p>Make it <strong>easy to convert</strong> ragged, differently-indexed data in other Python and NumPy data structures into DataFrame objects</p></li><li><p>Intelligent label-based <strong>slicing, fancy indexing, and sub-setting</strong> of large data sets</p></li><li><p>Intuitive <strong>merging and joining</strong> data sets</p></li><li><p>Flexible <strong>reshaping</strong> and pivoting of data sets</p></li><li><p><strong>Hierarchical</strong> labelling of axes (possible to have multiple labels per tick)</p></li><li><p>Robust IO tools for loading data from <strong>flat files</strong> (CSV and delimited), Excel files, databases, and saving / loading data from the ultrafast <strong>HDF5 format</strong></p></li><li><p><strong>Time series</strong>-specific functionality: date range generation and frequency conversion, moving window statistics, date shifting, and lagging.</p></li></ul><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to “Data Structures”">​</a></h2><p>Two primary data structures of pandas:</p><table tabindex="0"><thead><tr><th>Dimensions</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td><a href="#series">Series</a></td><td>1D labeled homogeneously-typed array</td></tr><tr><td>2</td><td><a href="#dataframe">DataFrame</a></td><td>General 2D labeled, size-mutable tabular structure with potentially heterogeneously-typed column</td></tr></tbody></table><ul><li>Series is a container for scalars</li><li>DataFrame is a container for Series</li></ul><p>All pandas data structures are value-mutable (the values they contain can be altered) but not always size-mutable</p><h3 id="series" tabindex="-1">Series <a class="header-anchor" href="#series" aria-label="Permalink to “Series”">​</a></h3><ul><li>Length of a Series cannot be changed</li></ul><p>The length of a Series cannot be changed, but, for example, columns can be inserted into a DataFrame. However, the vast majority of methods produce new objects and leave the input data untouched. In general we like to favor immutability where sensible.</p><p>Series as a list representation:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Let us consider the following list:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># StudentNames = [ &quot;John&quot;, &quot;Anna&quot;, &quot;Peter&quot; ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># The above list can be represented as a Series in pandas as follows:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">studentNames </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> pd</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">Series</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">John</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Anna</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Peter</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ],</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">StudentNames</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span></code></pre></div><h3 id="dataframe" tabindex="-1">DataFrame <a class="header-anchor" href="#dataframe" aria-label="Permalink to “DataFrame”">​</a></h3><p>DataFrame is a 2-dimensional labelled data structure with columns of potentially different types (including characters, integers, floating point values, categorical data and more). You can think of it like a spreadsheet or SQL table, or a dictionary of Series objects. It is generally the most commonly used pandas object</p><p>DataFrame as a table representation:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Let us consider the following table:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># |   | Name  | Location | Age |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># |---|-------|----------|-----|</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># | 0 | John  | New York | 24  | &lt;-- Row</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># | 1 | Anna  | Paris    | 13  |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># | 2 | Peter | Berlin   | 53  |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">#       ^</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">#       |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">#     Column</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Each row corresponds to a different person, and the columns represent different attributes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># The above table can be represented as a DataFrame in pandas as follows:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> pd</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">DataFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">John</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Anna</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Peter</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Location</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">New York</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Paris</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Berlin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Age</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 53</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># Print one column (one Series)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">df</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">])</span></span></code></pre></div><ul><li>Each column in a DataFrame is a <a href="#series">Series</a></li></ul>`,30)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};