import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"AWS CloudFormation","description":"AWS CloudFormation","frontmatter":{"title":"AWS CloudFormation","description":"AWS CloudFormation","prev":"./AWS"},"headers":[],"relativePath":"Concepts/AWS/AWS_CloudFormation.md","filePath":"Concepts/AWS/AWS_CloudFormation.md","lastUpdated":1756574703000}`);var a={name:`Concepts/AWS/AWS_CloudFormation.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="aws-cloudformation" tabindex="-1">AWS CloudFormation <a class="header-anchor" href="#aws-cloudformation" aria-label="Permalink to “AWS CloudFormation”">​</a></h1><p>Infrastructure as Code</p><ul><li>Currently, we have been doing a lot of manual work</li><li>All this manual work will be very tough to reproduce: <ul><li>In another region</li><li>in another AWS account</li><li>Within the same region if everything was deleted</li></ul></li><li>Wouldn&#39;t it be great, if all our infrastructure was... code?</li><li>That code would be deployed and create / update / delete our infrastructure</li></ul><h2 id="cloudformation" tabindex="-1">CloudFormation <a class="header-anchor" href="#cloudformation" aria-label="Permalink to “CloudFormation”">​</a></h2><ul><li>CloudFormation is a declarative way of outlining your AWS Infrastructure, for any resources (most of them are supported).</li><li>For example, within a CloudFormation template, you say: <ul><li>I want a security group</li><li>I want two EC2 machines using this security group</li><li>I want two Elastic IPs for these EC2 machines</li><li>I want an S3 bucket</li><li>I want a load balancer (ELB) in front of these machines</li></ul></li><li>Then CloudFormation creates those for you, in the right order, with the exact configuration that you specify</li></ul><h2 id="create-a-cloudformation-stack" tabindex="-1">Create a CloudFormation Stack <a class="header-anchor" href="#create-a-cloudformation-stack" aria-label="Permalink to “Create a CloudFormation Stack”">​</a></h2><ol><li><p>Goto CloudFormation</p></li><li><p>Create stack:</p><ul><li>Prepare template: (Template is ready) (Use a sample template) (create template in designer)</li><li>Specify template: (Amazon S3 URL) (Upload a template file)</li></ul></li><li><p>Stack name:</p></li><li><p>Additional options: ...</p></li><li><p>Review</p></li></ol><h2 id="benefits-of-aws-cloudformation" tabindex="-1">Benefits of AWS CloudFormation <a class="header-anchor" href="#benefits-of-aws-cloudformation" aria-label="Permalink to “Benefits of AWS CloudFormation”">​</a></h2><ul><li><p>Infrastructure as code</p><ul><li>No resources are manually created, which is excellent for control</li><li>The code can be version controlled for example using git</li><li>Changes to the infrastructure are reviewed through code</li></ul></li><li><p>Cost</p><ul><li>Each resources within the stack is tagged with an identifier so you can easily see how much a stack costs you</li><li>You can estimate the costs of your resources using the CloudFormation template</li><li>Savings strategy: In Dev, you could automation deletion of templates at 5 PM and recreated at 8 AM, safely</li></ul></li><li><p>Productivity</p><ul><li>Ability to destroy and re-create an infrastructure on the cloud on the fly</li><li>Automated generation of Diagram for your templates!</li><li>Declarative programming (no need to figure out ordering and orchestration)</li></ul></li><li><p>Separation of concern: create many stacks for many apps, and many layers. Ex:</p><ul><li>VPC stacks</li><li>Network stacks</li><li>App stacks</li></ul></li><li><p>Don&#39;t re-invent the wheel</p><ul><li>Leverage existing templates on the web!</li><li>Leverage the documentation</li></ul></li></ul><h2 id="how-cloudformation-works" tabindex="-1">How CloudFormation Works <a class="header-anchor" href="#how-cloudformation-works" aria-label="Permalink to “How CloudFormation Works”">​</a></h2><ul><li>Templates have to be uploaded in S3 and then referenced in CloudFormation</li><li>To update a template, we can&#39;t edit previous ones. We have to re- upload a new version of the template to AWS</li><li>Stacks are identified by a name</li><li>Deleting a stack deletes every single artifact that was created by CloudFormation.</li></ul><h2 id="deploying-cloudformation-templates" tabindex="-1">Deploying CloudFormation templates <a class="header-anchor" href="#deploying-cloudformation-templates" aria-label="Permalink to “Deploying CloudFormation templates”">​</a></h2><ul><li>Manual way: <ul><li>Editing templates in the CloudFormation Designer</li><li>Using the console to input parameters, etc</li></ul></li><li>Automated way: <ul><li>Editing templates in a YAML file</li><li>Using the AWS CLI (Command Line Interface) to deploy the templates</li><li>Recommended way when you fully want to automate your flow</li></ul></li></ul><h2 id="cloudformation-building-blocks" tabindex="-1">CloudFormation Building Blocks <a class="header-anchor" href="#cloudformation-building-blocks" aria-label="Permalink to “CloudFormation Building Blocks”">​</a></h2><p>Templates components (one course section for each):</p><ol><li><strong>Resources</strong>: your AWS resources declared in the template (MANDATORY)</li><li><strong>Parameters</strong>: the dynamic inputs for your template</li><li><strong>Mappings</strong>: the static variables for your template</li><li><strong>Outputs</strong>: References to what has been created</li><li><strong>Conditionals</strong>: List of conditions to perform resource creation</li><li><strong>Metadata</strong></li></ol><p>Templates helpers:</p><ol><li>References</li><li>Functions</li></ol><p>Note: This is an introduction to CloudFormation</p><ul><li>It can take over 3 hours to properly learn and master CloudFormation</li><li>This section is meant so you get a good idea of how it works</li><li>We&#39;ll be slightly less hands-on than in other sections</li><li>We&#39;ll learn everything we need to answer questions for the exam</li><li>The exam does not require you to actually write CloudFormation</li><li>The exam expects you to understand how to read CloudFormation</li></ul><h2 id="introductory-example" tabindex="-1">Introductory Example <a class="header-anchor" href="#introductory-example" aria-label="Permalink to “Introductory Example”">​</a></h2><ul><li>We&#39;re going to create a simple EC2 instance.</li><li>Then we&#39;re going to create to add an Elastic IP to it</li><li>And we&#39;re going to add two security groups to it</li><li>For now, forget about the code syntax.</li><li>We&#39;ll look at the structure of the files later on EC2 Instance</li><li>We&#39;ll see how in no-time, we are able to get started with CloudFormation!</li></ul><p><em>Example:</em></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MyInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::Instance</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      AvailabilityZone</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> us-east-1a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ami-a4c7edb2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> t2.micro</span></span></code></pre></div><h2 id="what-are-resources" tabindex="-1">What are resources? <a class="header-anchor" href="#what-are-resources" aria-label="Permalink to “What are resources?”">​</a></h2><ul><li>Resources are the core of your CloudFormation template (MANDATORY)</li><li>They represent the different AWS Components that will be created and configured</li><li>Resources are declared and can reference each other</li><li>AWS figures out creation, updates and deletes of resources for us</li><li>There are over 224 types of resources (!)</li><li>Resource types identifiers are of the form: <code>AWS::aws-product-name::data-type-name</code></li></ul><p><em>Example:</em></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  SecurityGroupDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Description</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Security Group Description</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> String</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MyInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::Instance</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      AvailabilityZone</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> us-east-1a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ami-a4c7edb2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> t2.micro</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      SecurityGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> SSHSecurityGroup</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ServerSecurityGroup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  # an elastic IP for our instance</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MyEIP</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::EIP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> MyInstance</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  # our EC2 security group</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  SSHSecurityGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::SecurityGroup</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      GroupDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Enable SSH access via port 22</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      SecurityGroupIngress</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;"> CidrIp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> 0.0.0.0/0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          FromPort</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 22</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          IpProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> tcp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          ToPort</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 22</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  # our second EC2 security group</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  ServerSecurityGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::SecurityGroup</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      GroupDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> SecurityGroupDescription</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      SecurityGroupIngress</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;"> IpProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> tcp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          FromPort</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          ToPort</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          CidrIp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> 0.0.0.0/0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;"> IpProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> tcp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          FromPort</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 22</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          ToPort</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 22</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">          CidrIp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> 192.168.1.1/32</span></span></code></pre></div><h2 id="how-do-i-find-resources-documentation" tabindex="-1">How do I find resources documentation? <a class="header-anchor" href="#how-do-i-find-resources-documentation" aria-label="Permalink to “How do I find resources documentation?”">​</a></h2><ul><li>I can&#39;t teach you all of the 224 resources, but I can teach you how to learn how to use them.</li><li>All the resources can be found here: <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html" target="_blank" rel="noreferrer">AWS Template Resource</a></li><li>Example here (for an EC2 instance): <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html" target="_blank" rel="noreferrer">EC2 Example</a></li></ul><h2 id="analysis-of-cloudformation-template" tabindex="-1">Analysis of CloudFormation Template <a class="header-anchor" href="#analysis-of-cloudformation-template" aria-label="Permalink to “Analysis of CloudFormation Template”">​</a></h2><ul><li>Going back to the example of the introductory section, let&#39;s learn why it was written this way.</li><li>Relevant documentation can be found here: <ul><li><a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html" target="_blank" rel="noreferrer">AWS Properties EC2 Instance</a></li><li><a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html" target="_blank" rel="noreferrer">AWS Properties EC2 Security Group</a></li><li><a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html" target="_blank" rel="noreferrer">AWS Properties EC2 EIP</a></li></ul></li></ul><h2 id="faq-for-resources" tabindex="-1">FAQ for resources <a class="header-anchor" href="#faq-for-resources" aria-label="Permalink to “FAQ for resources”">​</a></h2><ul><li><p><strong>Q. Can I create a dynamic amount of resources?</strong></p><ul><li>No, you can&#39;t. Everything in the CloudFormation template has to be declared. You can&#39;t perform code generation there</li></ul></li><li><p><strong>Q. Is every AWS Service supported?</strong></p><ul><li>Almost. Only a select few niches are not there yet</li><li>You can work around that using AWS Lambda Custom Resources</li></ul></li></ul><h2 id="what-are-parameters" tabindex="-1">What are parameters? <a class="header-anchor" href="#what-are-parameters" aria-label="Permalink to “What are parameters?”">​</a></h2><ul><li>Parameters are a way to provide inputs to your AWS CloudFormation template</li><li>They&#39;re important to know about if:</li><li>You want to reuse your templates across the company</li><li>Some inputs can not be determined ahead of time</li><li>Parameters are extremely powerful, controlled, and can prevent errors from happening in your templates thanks to types.</li></ul><h2 id="when-should-you-use-a-parameter" tabindex="-1">When should you use a parameter? <a class="header-anchor" href="#when-should-you-use-a-parameter" aria-label="Permalink to “When should you use a parameter?”">​</a></h2><ul><li>Ask yourself this: <ul><li>Is this CloudFormation resource configuration likely to change in the future?</li><li>If so, make it a parameter.</li></ul></li><li>You won&#39;t have to re-upload a template to change its content J</li></ul><h3 id="parameters-settings" tabindex="-1">Parameters Settings <a class="header-anchor" href="#parameters-settings" aria-label="Permalink to “Parameters Settings”">​</a></h3><p>Parameters can be controlled by all these settings:</p><ul><li>Type: <ul><li>String</li><li>Number</li><li>CommaDelimitedList</li><li><code>List&lt;Type&gt;</code></li><li>AWS Parameter (to help catch invalid values - match against existing values in the AWS Account)</li></ul></li><li>Description</li><li>Constraints</li><li>ConstraintDescription (String)</li><li>Min/MaxLength</li><li>Min/MaxValue</li><li>Defaults</li><li>AllowedValues (array)</li><li>AllowedPattern (regexp)</li><li>NoEcho (Boolean)</li></ul><h2 id="how-to-reference-a-parameter" tabindex="-1">How to Reference a Parameter <a class="header-anchor" href="#how-to-reference-a-parameter" aria-label="Permalink to “How to Reference a Parameter”">​</a></h2><ul><li>The <code>Fn::Ref</code> function can be leveraged to reference parameters</li><li>Parameters can be used anywhere in a template.</li><li>The shorthand for this in YAML is <code>!Ref</code></li><li>The function can also reference other elements within the template</li></ul><p><em>Example:</em></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">DbSubnet1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::Subnet</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    VpcId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> MyVPC</span></span></code></pre></div><h2 id="concept-pseudo-parameters" tabindex="-1">Concept: Pseudo Parameters <a class="header-anchor" href="#concept-pseudo-parameters" aria-label="Permalink to “Concept: Pseudo Parameters”">​</a></h2><ul><li>AWS offers us pseudo parameters in any CloudFormation template.</li><li>These can be used at any time and are enabled by default:</li></ul><table tabindex="0"><thead><tr><th>Reference Value</th><th>Example Return Value</th></tr></thead><tbody><tr><td><strong>AWS::AccountId</strong></td><td>1234567890</td></tr><tr><td>AWS::NotificationARNs</td><td>[arn:aws:sns:us-east- 1:123456789012:MyTopic]</td></tr><tr><td>AWS::NoValue</td><td>Does not return a value.</td></tr><tr><td>AWS::Region</td><td>us-east-2</td></tr><tr><td>AWS::StackId</td><td>arn:aws:cloudformation:us-east- 1:123456789012:stack/MyStack/1c2fa62 0-982a-11e3-aff7-50e2416294e0</td></tr><tr><td>AWS::StackName</td><td>MyStack</td></tr></tbody></table><h2 id="what-are-mappings" tabindex="-1">What are mappings? <a class="header-anchor" href="#what-are-mappings" aria-label="Permalink to “What are mappings?”">​</a></h2><ul><li>Mappings are fixed variables within your CloudFormation Template.</li><li>They&#39;re very handy to differentiate between different environments (dev vs prod), regions (AWS regions), AMI types, etc</li><li>All the values are hardcoded within the template</li></ul><p><em>Example:</em></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Mappings</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Mapping01</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Key01</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Value01</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Key02</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Value02</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Key03</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Value03</span></span></code></pre></div><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Mappings</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  RegionMap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6411e20d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a11e213</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6394e21d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a12e215</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6408e39d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a11e236</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre></div><h3 id="accessing-mapping-values" tabindex="-1">Accessing Mapping Values <a class="header-anchor" href="#accessing-mapping-values" aria-label="Permalink to “Accessing Mapping Values”">​</a></h3><p>Using <code>Fn::FindInMap</code></p><ul><li>We use <code>Fn::FindInMap</code> to return a named value from a specific key</li><li><code>!FindInMap [ MapName, TopLevelKey, SecondLevelKey ]</code></li></ul><p><em>Example:</em></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Mappings</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  RegionMap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6411e20d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a11e213</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6394e21d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a12e215</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6408e39d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a11e236</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  myEC2Ins</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::Instance</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !FindInMap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">RegionMap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::Region</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span></code></pre></div><h2 id="when-would-you-use-mappings-vs-parameters" tabindex="-1">When would you use mappings vs parameters ? <a class="header-anchor" href="#when-would-you-use-mappings-vs-parameters" aria-label="Permalink to “When would you use mappings vs parameters ?”">​</a></h2><ul><li>Mappings are great when you know in advance all the values that can be taken and that they can be deduced from variables such as <ul><li>Region</li><li>Availability Zone</li><li>AWS Account</li><li>Environment (dev vs prod)</li><li>Etc...</li></ul></li><li>They allow safer control over the template.</li><li>Use parameters when the values are really user specific</li></ul><h2 id="what-are-outputs" tabindex="-1">What are outputs? <a class="header-anchor" href="#what-are-outputs" aria-label="Permalink to “What are outputs?”">​</a></h2><ul><li>The Outputs section declares optional outputs values that we can import into other stacks (if you export them first)!</li><li>You can also view the outputs in the AWS Console or in using the AWS CLI</li><li>They&#39;re very useful for example if you define a network CloudFormation, and output the variables such as VPC ID and your Subnet IDs</li><li>It&#39;s the best way to perform some collaboration cross stack, as you let expert handle their own part of the stack</li><li>You can&#39;t delete a CloudFormation Stack if its outputs are being referenced by another CloudFormation stack</li></ul><h2 id="outputs-example" tabindex="-1">Outputs Example <a class="header-anchor" href="#outputs-example" aria-label="Permalink to “Outputs Example”">​</a></h2><ul><li>Creating a SSH Security Group as part of one template</li><li>We create an output that references that security group</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Outputs</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  StackSSHSecurityGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Description</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> The SSH Security Group for our company</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Value</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> MyCompanyWideSSHSecurityGroup</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Export</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> SSHSecurityGroup</span></span></code></pre></div><h2 id="cross-stack-reference" tabindex="-1">Cross Stack Reference <a class="header-anchor" href="#cross-stack-reference" aria-label="Permalink to “Cross Stack Reference”">​</a></h2><ul><li>We then create a second template that leverages that security group</li><li>For this, we use the <code>Fn::ImportValue</code> function</li><li>You can&#39;t delete the underlying stack until all the references are deleted too.</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MySecureInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> AWS::EC2::Instance</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      AvailabilityZone</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> us-east-1a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ami-a4c7edb2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> t2.micro</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      SecurityGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !ImportValue</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> SSHSecurityGroup</span></span></code></pre></div><h2 id="what-are-conditions-used-for" tabindex="-1">What are conditions used for? <a class="header-anchor" href="#what-are-conditions-used-for" aria-label="Permalink to “What are conditions used for?”">​</a></h2><ul><li>Conditions are used to control the creation of resources or outputs based on a condition.</li><li>Conditions can be whatever you want them to be, but common ones are: <ul><li>Environment (dev / test / prod)</li><li>AWS Region</li><li>Any parameter value</li></ul></li><li>Each condition can reference another condition, parameter value or mapping</li></ul><h2 id="how-to-define-a-condition" tabindex="-1">How to define a condition? <a class="header-anchor" href="#how-to-define-a-condition" aria-label="Permalink to “How to define a condition?”">​</a></h2><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Conditions</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  CreateProdResources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Equals</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> EnvType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> prod</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span></code></pre></div><ul><li>The logical ID is for you to choose. It&#39;s how you name condition</li><li>The intrinsic function (logical) can be any of the following:</li><li><code>Fn::And</code></li><li><code>Fn::Equals</code></li><li><code>Fn::If</code></li><li><code>Fn::Not</code></li><li><code>Fn::Or</code></li></ul><h2 id="using-a-condition" tabindex="-1">Using a Condition <a class="header-anchor" href="#using-a-condition" aria-label="Permalink to “Using a Condition”">​</a></h2><ul><li>Conditions can be applied to resources / outputs / etc...</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MountPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::VolumeAttachment</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Condition</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> CreateProdResources</span></span></code></pre></div><h2 id="cloudformation-must-know-intrinsic-functions" tabindex="-1">CloudFormation Must Know Intrinsic Functions <a class="header-anchor" href="#cloudformation-must-know-intrinsic-functions" aria-label="Permalink to “CloudFormation Must Know Intrinsic Functions”">​</a></h2><ul><li><code>Ref</code></li><li><code>Fn::GetAtt</code></li><li><code>Fn::FindInMap</code></li><li><code>Fn::ImportValue</code></li><li><code>Fn::Join</code></li><li><code>Fn::Sub</code></li><li><code>Condition Functions (Fn::If, Fn::Not, Fn::Equals, etc...)</code></li></ul><h2 id="fn-ref" tabindex="-1">Fn::Ref <a class="header-anchor" href="#fn-ref" aria-label="Permalink to “Fn::Ref”">​</a></h2><ul><li>The Fn::Ref function can be leveraged to reference <ul><li>Parameters =&gt; returns the value of the parameter</li><li>Resources =&gt; returns the physical ID of the underlying resource (ex: EC2 ID)</li></ul></li><li>The shorthand for this in YAML is !Ref</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">DbSubnet1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::VolumeAttachment</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    VpcId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> MyVPC</span></span></code></pre></div><h2 id="fn-getatt" tabindex="-1">Fn::GetAtt <a class="header-anchor" href="#fn-getatt" aria-label="Permalink to “Fn::GetAtt”">​</a></h2><ul><li>Attributes are attached to any resources you create</li><li>To know the attributes of your resources, the best place to look at is the documentation.</li><li>For example: the AZ of an EC2 machine!</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  EC2Instance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::Instance</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ami-12345</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> t2.micro</span></span></code></pre></div><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">NewVolume</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::Volume</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Condition</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> CreateProdResources</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 100</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    AvailabilityZone</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !GetAtt</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> EC2Instance.AvailabilityZone</span></span></code></pre></div><h2 id="fn-findinmap" tabindex="-1">Fn::FindInMap <a class="header-anchor" href="#fn-findinmap" aria-label="Permalink to “Fn::FindInMap”">​</a></h2><p>Accessing Mapping Values</p><ul><li>We use <code>Fn::FindInMap</code> to return a named value from a specific key</li><li><code>!FindInMap [ MapName, TopLevelKey, SecondLevelKey ]</code></li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">ASWTemplateFormatVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">2019-03-03</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Mappings</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  RegionMap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6411e20d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a11e213</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6394e21d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a12e215</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    us-east-3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">32</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-6408e39d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ami-7a11e236</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MyEC2Instances</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::Instance</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !FindInMap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MapName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> TopLevelKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> SecondLevelKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> m1.small</span></span></code></pre></div><h2 id="fn-importvalue" tabindex="-1">Fn::ImportValue <a class="header-anchor" href="#fn-importvalue" aria-label="Permalink to “Fn::ImportValue”">​</a></h2><ul><li>Import values that are exported in other templates</li><li>For this, we use the Fn::ImportValue function</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  MySecureInstances</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AWS::EC2::Instance</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">    Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      AvailabilityZone</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> us-east-1a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      ImageId</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ami-a7c7ebd2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      InstanceType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> m1.small</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">      SecurityGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">        -</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !ImportValue:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> SSHSecurityGroup</span></span></code></pre></div><h2 id="fn-join" tabindex="-1">Fn::Join <a class="header-anchor" href="#fn-join" aria-label="Permalink to “Fn::Join”">​</a></h2><ul><li><p>Join values with a delimiter</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!Join</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">delimiter</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">comma-delimited list of values</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]]</span></span></code></pre></div></li><li><p>This creates &quot;a🅱️c&quot;</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!Join</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> b c</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]]</span></span></code></pre></div></li></ul><h2 id="function-fn-sub" tabindex="-1">Function Fn::Sub <a class="header-anchor" href="#function-fn-sub" aria-label="Permalink to “Function Fn::Sub”">​</a></h2><ul><li>Fn::Sub, or !Sub as a shorthand, is used to substitute variables from a text. It&#39;s a very handy function that will allow you to fully customize your templates.</li><li>For example, you can combine <code>Fn::Sub</code> with References or AWS Pseudo variables!</li><li>String must contain <code>\${VariableName}</code> and will substitute them</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!Sub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;"> Var1Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Var1Value</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;"> Var2Name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Var2Value</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span></code></pre></div><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!Sub</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> String</span></span></code></pre></div><h2 id="condition-functions" tabindex="-1">Condition Functions <a class="header-anchor" href="#condition-functions" aria-label="Permalink to “Condition Functions”">​</a></h2><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">Conditions</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#B8A965;">  CreateProdResources</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !Equals</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!Ref</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> EnvType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> prod</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span></code></pre></div><ul><li>The logical ID is for you to choose. It&#39;s how you name condition</li><li>The intrinsic function (logical) can be any of the following: <ul><li><code>Fn::And</code></li><li><code>Fn::Equals</code></li><li><code>Fn::If</code></li><li><code>Fn::Not</code></li><li><code>Fn::Or</code></li></ul></li></ul><h2 id="cloudformation-rollbacks" tabindex="-1">CloudFormation Rollbacks <a class="header-anchor" href="#cloudformation-rollbacks" aria-label="Permalink to “CloudFormation Rollbacks”">​</a></h2><ul><li>Stack Creation Fails: <ul><li>Default: everything rolls back (gets deleted). We can look at the log</li><li>Option to disable rollback and troubleshoot what happened</li></ul></li><li>Stack Update Fails: <ul><li>The stack automatically rolls back to the previous known working state</li><li>Ability to see in the log what happened and error messages</li></ul></li></ul><h2 id="changesets" tabindex="-1">ChangeSets <a class="header-anchor" href="#changesets" aria-label="Permalink to “ChangeSets”">​</a></h2><ul><li>When you update a stack, you need to know what changes before it happens for greater confidence</li><li>ChangeSets won&#39;t say if the update will be successful</li></ul><h2 id="nested-stacks" tabindex="-1">Nested stacks <a class="header-anchor" href="#nested-stacks" aria-label="Permalink to “Nested stacks”">​</a></h2><ul><li>Nested stacks are stacks as part of other stacks</li><li>They allow you to isolate repeated patterns / common components in separate stacks and call them from other stacks</li><li>Example: <ul><li>Load Balancer configuration that is re-used</li><li>Security Group that is re-used</li></ul></li><li>Nested stacks are considered best practice</li><li>To update a nested stack, always update the parent (root stack)</li></ul><h2 id="cloudformation-cross-vs-nested-stacks" tabindex="-1">CloudFormation - Cross vs Nested Stacks <a class="header-anchor" href="#cloudformation-cross-vs-nested-stacks" aria-label="Permalink to “CloudFormation - Cross vs Nested Stacks”">​</a></h2><ul><li>Cross Stacks <ul><li>Helpful when stacks have different lifecycles</li><li>Use Outputs Export and Fn::ImportValue</li><li>When you need to pass export values to many stacks (VPC Id, etc...)</li></ul></li><li>Nested Stacks <ul><li>Helpful when components must be re-used</li><li>Ex: re-use how to properly configure an Application Load Balancer</li><li>The nested stack only is important to the higher level stack (it&#39;s not shared)</li></ul></li></ul><h2 id="cloudformation-stacksets" tabindex="-1">CloudFormation - StackSets <a class="header-anchor" href="#cloudformation-stacksets" aria-label="Permalink to “CloudFormation - StackSets”">​</a></h2><ul><li>Create, update, or delete stacks across multiple accounts and regions with a single operation</li><li>Administrator account to create StackSets</li><li>Trusted accounts to create, update, delete stack instances from StackSets</li><li>When you update a stack set, all associated stack instances are updated throughout all accounts and regions.</li></ul><h2 id="cloudformation-drift" tabindex="-1">CloudFormation Drift <a class="header-anchor" href="#cloudformation-drift" aria-label="Permalink to “CloudFormation Drift”">​</a></h2><ul><li>CloudFormation allows you to create infrastructure</li><li>But it doesn&#39;t protect you against manual configuration changes</li><li>How do we know if our resources have drifted?</li><li>We can use CloudFormation drift!</li><li>Not all resources are supported yet: <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html" target="_blank" rel="noreferrer">Using CloudFormation Drift</a></li></ul>`,113)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};