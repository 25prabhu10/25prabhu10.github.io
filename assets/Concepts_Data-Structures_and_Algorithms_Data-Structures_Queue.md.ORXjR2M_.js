import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"Queue","description":"Queue","frontmatter":{"title":"Queue","description":"Queue"},"headers":[],"relativePath":"Concepts/Data-Structures_and_Algorithms/Data-Structures/Queue.md","filePath":"Concepts/Data-Structures_and_Algorithms/Data-Structures/Queue.md","lastUpdated":1756574703000}`);var a={name:`Concepts/Data-Structures_and_Algorithms/Data-Structures/Queue.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="queue" tabindex="-1">Queue <a class="header-anchor" href="#queue" aria-label="Permalink to “Queue”">​</a></h1><p>A Queue is an abstract data type that serves as a collection of elements, with two main principal operations:</p><ol><li><p><strong>Enqueue</strong>: Which adds an element to the collection</p></li><li><p><strong>Dequeue</strong>: Which removes the most recently added element that was not yet removed</p></li></ol><p><strong>FIFO</strong>: <em>First-in First-out</em> it is the order in which elements are pushed and popped.</p><ul><li>Similar to a real life queue, new element is inserted at the rear end of the queue and an element is only removed at the front end of the queue.</li></ul><p><em>Queue representation:</em> 😃</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       |   |--&gt; out</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | 4 |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | 6 |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | . |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | . |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | . |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | 9 |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//       | 7 |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// in --&gt;|   |</span></span></code></pre></div><p>Types of Queues:</p><ul><li><a href="#simple-queue">Simple Queue</a></li><li><a href="#circular-queue">Circular Queue</a></li><li><a href="#priority-queue">Priority Queue</a></li><li><a href="#double-ended-queue-deque">Double Ended Queue (Deque)</a></li></ul><h2 id="simple-queue" tabindex="-1">Simple Queue <a class="header-anchor" href="#simple-queue" aria-label="Permalink to “Simple Queue”">​</a></h2><p>Data:</p><ul><li>Space for storing elements</li><li><strong>Front pointer</strong>: for deletion</li><li><strong>Rear pointer</strong>: for Insertion</li></ul><p>Operations:</p><ul><li><strong>Enqueue</strong>: Add an element to the end of the queue</li><li><strong>Dequeue</strong>: Remove an element from the front of the queue</li><li><strong>IsEmpty</strong>: Check if the queue is empty</li><li><strong>Peek</strong>: Get the value of the front of the queue without removing it</li><li>IsFull: Check if the queue is full</li><li>Last: check the last element</li></ul><p>The queue can be implemented using:</p><ul><li><a href="#arrays">Arrays</a></li><li><a href="#linked-list">Linked List</a></li></ul><h3 id="arrays" tabindex="-1">Arrays <a class="header-anchor" href="#arrays" aria-label="Permalink to “Arrays”">​</a></h3><ol><li><p>Queues using single pointer:</p><ul><li>New element will be inserted at the rare: Operation <code>O(1)</code></li><li>Element will be removed from the front <code>A[0]</code> and all the remaining elements will be shifted to one position lower i.e. <code>A[i] = A[i + 1]</code>: Operation <code>O(n)</code></li></ul><p><em>Example:</em></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Enqueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Stack-overflow!!!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Dequeue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Stack-underflow!!!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    x </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">        queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> isFull</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>Queues using two pointer:</p><ul><li>New element will be inserted at the rare: Operation <code>O(1)</code></li><li>An element deletion will remove the first element: Operation <code>O(1)</code></li></ul><p><em>Example:</em></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">front</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Enqueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Stack-overflow!!!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Dequeue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Stack-underflow!!!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">front</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    x </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> isFull</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> Queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">rear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> queue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ol><p>Drawbacks of using Arrays:</p><ul><li>If rare of the Queue is at the last element and front is larger than 0 that means that array has some empty space at the start. So, even though there the array has empty space we cannot add new elements as <code>rare == size</code> and new elements are added from the rare.</li><li>Every space in an array is only used once.</li></ul><p>Workaround:</p><ul><li><p><strong>Resetting Pointers</strong>: While dequeueing if front and rear are same then reset both and make them <code>-1</code>. Not always front and rear are equal, hence this method is good only when all elements are deleted.</p></li><li><p><strong><a href="#circular-queue">Circular Queue</a></strong></p></li></ul><h3 id="linked-list" tabindex="-1">Linked List <a class="header-anchor" href="#linked-list" aria-label="Permalink to “Linked List”">​</a></h3><h3 id="complexity" tabindex="-1">Complexity <a class="header-anchor" href="#complexity" aria-label="Permalink to “Complexity”">​</a></h3><p>Array Based:</p><ul><li>Enqueue and Dequeue: <code>O(1)</code></li></ul><h3 id="applications" tabindex="-1">Applications <a class="header-anchor" href="#applications" aria-label="Permalink to “Applications”">​</a></h3><ul><li><p>CPU Scheduling, Disk Scheduling</p></li><li><p>Data Synchronization</p></li></ul><h3 id="limitations" tabindex="-1">Limitations <a class="header-anchor" href="#limitations" aria-label="Permalink to “Limitations”">​</a></h3><ul><li><p>After few enqueue and dequeue operations, the size of the queue is reduced</p></li><li><p>Only after reset, full size of the queue can be utilized</p></li></ul><h2 id="circular-queue" tabindex="-1">Circular Queue <a class="header-anchor" href="#circular-queue" aria-label="Permalink to “Circular Queue”">​</a></h2><p>In a circular queue, the last element points to the first element making a circular link.</p><ul><li>Front and rear move in a circular way and array is not circular.</li></ul><p>Advantages of Simple Queue:</p><ul><li>Better memory utilization</li></ul><h3 id="cq-implementation" tabindex="-1">CQ Implementation <a class="header-anchor" href="#cq-implementation" aria-label="Permalink to “CQ Implementation”">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">stdio.h</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> SIZE</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> front </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Check if the queue is full</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> isFull</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ((</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> SIZE </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">))</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Check if the queue is empty</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Adding an element</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">isFull</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Queue is full!! </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> front </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    items</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Inserted -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Removing an element</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> deQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">())</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Queue is empty !! </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    element </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      front </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // Q has only one element, so we reset the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // queue after dequeing it. ?</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      front </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Deleted element -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">element</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Display the queue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Empty Queue</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Front -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Items -&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">      printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> Rear -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Fails because front = -1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  deQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Fails to enqueue because front == 0 &amp;&amp; rear == SIZE - 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  deQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Fails to enqueue because front == rear + 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  enQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="cq-complexity" tabindex="-1">CQ Complexity <a class="header-anchor" href="#cq-complexity" aria-label="Permalink to “CQ Complexity”">​</a></h3><p>Array Based:</p><ul><li>Enqueue and Dequeue: <code>O(1)</code></li></ul><h3 id="cq-applications" tabindex="-1">CQ Applications <a class="header-anchor" href="#cq-applications" aria-label="Permalink to “CQ Applications”">​</a></h3><ul><li>CPU scheduling</li><li>Memory management</li><li>Traffic Management</li></ul><h2 id="double-ended-queue-deque" tabindex="-1">Double Ended Queue (Deque) <a class="header-anchor" href="#double-ended-queue-deque" aria-label="Permalink to “Double Ended Queue (Deque)”">​</a></h2><p>Deque or Double Ended Queue is a type of queue in which insertion and removal of elements can either be performed from the front or the rear.</p><ul><li>It <strong>strictly doesn&#39;t follow FIFO</strong>. FIFO can be used</li><li><strong>Both front and rear</strong> can be <strong>used for insertion and deletion</strong></li></ul><table tabindex="0"><thead><tr><th>Operation</th><th>Queue</th><th>DEQueue</th></tr></thead><tbody><tr><td>Insert</td><td>rear</td><td>Both</td></tr><tr><td>Delete</td><td>front</td><td>Both</td></tr></tbody></table><p>Variants of DEQueue:</p><ol><li><p><strong>Input Restricted</strong>: Insertion can only happen from rear</p><table tabindex="0"><thead><tr><th></th><th>Insert</th><th>Delete</th></tr></thead><tbody><tr><td>front</td><td>-</td><td>Y</td></tr><tr><td>rear</td><td>Y</td><td>Y</td></tr></tbody></table></li><li><p><strong>Output Restricted</strong>: Deletion can only happen from front</p><table tabindex="0"><thead><tr><th></th><th>Insert</th><th>Delete</th></tr></thead><tbody><tr><td>front</td><td>Y</td><td>Y</td></tr><tr><td>rear</td><td>Y</td><td>-</td></tr></tbody></table></li></ol><p>Implementation:</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">stdio.h</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> MAX</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> addFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> delFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> delRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  front </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> rear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 11</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Elements in a deque: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> delFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">removed item: </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Elements in a deque after deletion: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Elements in a deque after addition: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> delRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">front</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">rear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">removed item: </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Elements in a deque after deletion: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  n </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Total number of elements in deque: </span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> addFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Deque is full.</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    k </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">k </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      k</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> addRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Deque is full.</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    k </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      k </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">k </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">        arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">      else</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">        arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> delFront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Deque is empty.</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  item </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> delRear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">pfront</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Deque is empty.</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  item </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">prear </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">pfront </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> display</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> front:  </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">  %d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">  :rear</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> c </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      c</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="deque-complexity" tabindex="-1">Deque Complexity <a class="header-anchor" href="#deque-complexity" aria-label="Permalink to “Deque Complexity”">​</a></h3><ul><li><code>O(1)</code></li></ul><h3 id="deque-applications" tabindex="-1">Deque Applications <a class="header-anchor" href="#deque-applications" aria-label="Permalink to “Deque Applications”">​</a></h3><ul><li>In undo operations on software</li><li>To store history in browsers</li><li>For implementing both <a href="./Stack.html">stacks</a> and <a href="#queue">queues</a></li></ul><h2 id="priority-queue" tabindex="-1">Priority Queue <a class="header-anchor" href="#priority-queue" aria-label="Permalink to “Priority Queue”">​</a></h2><p>A priority queue is <strong>a special type of queue</strong> in which each element is associated with a <strong>priority value</strong>.</p><ul><li><p>Elements are served on the basis of their priority</p></li><li><p>That is, <strong>higher priority elements are served first</strong></p></li><li><p>If two elements have the <strong>same priority</strong>, they are served according to their <strong>order in the queue</strong>.</p></li><li><p>Assigning Priority Value</p></li></ul><ol><li><p>Limited set of Priorities:</p><ul><li>Useful in OS</li></ul></li><li><p>Element Priority</p><ul><li>Two ways: <ul><li><p>Insert in same order as they come and delete max-priority by search: Operation: Insert - <code>O(1)</code>, Delete - <code>O(n)</code></p></li><li><p>Insert in increasing/decreasing order of Priority and Delete last/first element: Operation: Insert - <code>O(n)</code>, Delete - <code>O(1)</code></p></li></ul></li></ul></li></ol><p>Implementation:</p><ul><li><a href="./Heap.html">Heap</a> data structure provides an efficient implementation of priority queues.</li></ul><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">stdio.h</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> swap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> temp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Function to heapify the tree</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> heapify</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Single element in the heap</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // Find the largest among root, left child and right child</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> largest </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> l </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">l </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&amp;&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">l</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">largest</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      largest </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> l</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&amp;&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">r</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">largest</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">      largest </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // Swap and continue heapifying if root is not largest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">largest </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">      swap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">largest</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">      heapify</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> largest</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Function to insert an element into the tree</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> insert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> newNum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> newNum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> newNum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">      heapify</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Function to delete an element from the tree</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> deleteRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> num</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">num </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">      break</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  swap</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">-=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    heapify</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Print the array</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printArray</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ++</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Driver code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  insert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  insert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  insert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  insert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  insert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max-Heap array: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printArray</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  deleteRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">After deleting an element: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printArray</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="pq-complexity" tabindex="-1">PQ Complexity <a class="header-anchor" href="#pq-complexity" aria-label="Permalink to “PQ Complexity”">​</a></h3><table tabindex="0"><thead><tr><th>Operations</th><th>peek</th><th>insert</th><th>delete</th></tr></thead><tbody><tr><td>Linked List</td><td><code>O(1)</code></td><td><code>O(n)</code></td><td><code>O(1)</code></td></tr><tr><td>Binary Heap</td><td><code>O(1)</code></td><td><code>O(log n)</code></td><td><code>O(log n)</code></td></tr><tr><td>Binary Search Tree</td><td><code>O(1)</code></td><td><code>O(log n)</code></td><td><code>O(log n)</code></td></tr></tbody></table><h3 id="pq-applications" tabindex="-1">PQ Applications <a class="header-anchor" href="#pq-applications" aria-label="Permalink to “PQ Applications”">​</a></h3><ul><li><p>Dijkstra&#39;s Shortest Path algorithm</p></li><li><p>Anytime you need to dynamically fetch the &#39;next best&#39; or &#39;next worst&#39; element</p></li><li><p>Used in Huffman Coding (which is often used for lossless data compression)</p></li><li><p>Best First Search (BFS) algorithms such as <em>A* search algorithm</em> use PQs to continuously grab the next most promising node</p></li><li><p>Used by Minimum Spanning Tree (MST) algorithms</p></li><li><p>For implementing stack</p></li><li><p>For load balancing and interrupt handling in an operating system</p></li></ul><h2 id="implementing-queue-using-stack" tabindex="-1">Implementing Queue Using Stack <a class="header-anchor" href="#implementing-queue-using-stack" aria-label="Permalink to “Implementing Queue Using Stack”">​</a></h2>`,66)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};