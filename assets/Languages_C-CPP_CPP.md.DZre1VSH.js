import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"C++","description":"It is a general-purpose computer programming language created as an extension of the C","frontmatter":{"title":"C++","description":"It is a general-purpose computer programming language created as an extension of the C"},"headers":[],"relativePath":"Languages/C-CPP/CPP.md","filePath":"Languages/C-CPP/CPP.md","lastUpdated":1756574703000}`);var a={name:`Languages/C-CPP/CPP.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="c" tabindex="-1">C++ <a class="header-anchor" href="#c" aria-label="Permalink to “C++”">​</a></h1><p>Main function can be used without <code>return</code> statement. It by default includes <code>return 0</code></p><ul><li>Think operators as functions like: <code>cout &lt;&lt; &quot;Hello&quot; &lt;&lt; endl;</code> as <code>cout.print(&quot;Hello).print(endl);</code></li></ul><h2 id="headers-and-namespaces" tabindex="-1">Headers and Namespaces <a class="header-anchor" href="#headers-and-namespaces" aria-label="Permalink to “Headers and Namespaces”">​</a></h2><p><a href="./C.html#headers-and-preprocessor-directives">Headers and Preprocessor Directives</a></p><ul><li><p>Namespace:</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// sum.h</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> once</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> customSum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// sum.cpp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> customSum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Main file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">sum.h</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">  cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> customSum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul><h2 id="arrays" tabindex="-1">Arrays <a class="header-anchor" href="#arrays" aria-label="Permalink to “Arrays”">​</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">iostream</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">stdio.h</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">        cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> endl</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    // FOR EACH LOOP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x </span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">        cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> endl</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> endl</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> endl</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Completed</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Size of an array can be dynamically provided, but during declaration the items cannot be initialized</li></ul><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Enter size</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">    cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="virtual-functions" tabindex="-1">Virtual Functions <a class="header-anchor" href="#virtual-functions" aria-label="Permalink to “Virtual Functions”">​</a></h2><ul><li>Dynamic Dispatch</li><li>V Table</li></ul><p>Pure Virtual Functions are similar to Interface or Abstract Class</p>`,13)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};