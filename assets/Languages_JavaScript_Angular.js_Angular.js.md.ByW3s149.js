import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"AngularJS","description":"A JavaScript Framework to create Single-Page-Applications (SPA)s","frontmatter":{"title":"AngularJS","description":"A JavaScript Framework to create Single-Page-Applications (SPA)s"},"headers":[],"relativePath":"Languages/JavaScript/Angular.js/Angular.js.md","filePath":"Languages/JavaScript/Angular.js/Angular.js.md","lastUpdated":1756574703000}`);var a={name:`Languages/JavaScript/Angular.js/Angular.js.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="angularjs" tabindex="-1">AngularJS <a class="header-anchor" href="#angularjs" aria-label="Permalink to “AngularJS”">​</a></h1><p>AngularJS is a JavaScript-based open-source front-end web framework for developing single-page applications</p><p>Features of AngularJS:</p><ul><li>Dependency Injection</li><li>Two way data-binding</li><li>Testing</li><li>Model View Controller</li><li>Directives, Filters, etc...</li></ul><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to “Setup”">​</a></h2><ul><li><p>Various ways to integrate AngularJS:</p><ul><li>Install AngularJS from <code>npm</code> or <code>yarn</code></li><li>Download AngularJS script and include the script tag</li><li>Use the CDN to get the AngularJS script</li></ul></li><li><p>To bootstrap AngularJS we need to include the <code>ng-app</code> directive as part of the HTML element such as body or the HTML page itself, so that AngularJS can start managing it</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">en</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">angular.min.js</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">Document</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">body</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> ng-app</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span></code></pre></div></li><li><p>Using double curly braces (binding expression) we can write AngularJS expression within the HTML</p></li></ul><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-label="Permalink to “Modules”">​</a></h2><p>A module is a container for different parts of the application i.e. controllers, services, directives, filters, etc</p><ul><li><p>It can be thought of as the <code>Main()</code> method in other types of applications</p></li><li><p>To create a module use angular object&#39;s <code>module()</code> method:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> myApp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> angular</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">myModule</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> []);</span></span></code></pre></div></li></ul><h2 id="controller" tabindex="-1">Controller <a class="header-anchor" href="#controller" aria-label="Permalink to “Controller”">​</a></h2><p>In AngularJS a controller is a JavaScript function. The job of the controller is to build a model for the view to display</p><ul><li><p>To create a controller function, just create a function and pass the <code>$scope</code> as parameter.</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> myController</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">$scope</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  $scope</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">message</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">AngularJS Tutorial</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div></li><li><p><code>$scope</code> is an angular object passed by angular framework</p></li><li><p>The model is attached to this <code>$scope</code> object which is then available in the view and can be displayed</p></li></ul><h2 id="digest-cycle" tabindex="-1">Digest Cycle <a class="header-anchor" href="#digest-cycle" aria-label="Permalink to “Digest Cycle”">​</a></h2><p>Digest cycle (digest phase or digest process or digest loop)</p><ul><li><p>Responsible to walk-through entire watch list for modifications</p><ul><li>Dirty-checking: the process of checking the current values of scope variables with their previous values</li></ul></li><li><p>Exists modifications? Executes Watch Listeners, if any</p></li><li><p>Keeps note of all modifications and notifies AngularJS Framework to update DOM</p></li><li><p>Digest process runs as part of Angular Context:</p><ul><li>Angular Context: run-time env. of AngularJS Framework</li></ul></li></ul>`,15)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};