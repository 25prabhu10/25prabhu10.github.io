import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"SSL Certificates","description":null,"frontmatter":{"title":"SSL Certificates","description":null},"headers":[],"relativePath":"Concepts/Web/SSL_Certificates.md","filePath":"Concepts/Web/SSL_Certificates.md","lastUpdated":1690829560000}`);var a={name:`Concepts/Web/SSL_Certificates.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="ssl-certificates" tabindex="-1">SSL Certificates <a class="header-anchor" href="#ssl-certificates" aria-label="Permalink to “SSL Certificates”">​</a></h1><p>X.509 is an ITU standard defining the format of public key certificates. X.509 are used in TLS/SSL, which is the basis for HTTPS. An X.509 certificate binds an identity to a public key using a digital signature. A certificate contains an identity (hostname, organization, etc.) and a public key (RSA, DSA, ECDSA, ed25519, etc.), and is either signed by a Certificate Authority or is Self-Signed</p><h2 id="self-signed-certificates" tabindex="-1">Self-Signed Certificates <a class="header-anchor" href="#self-signed-certificates" aria-label="Permalink to “Self-Signed Certificates”">​</a></h2><h3 id="generate-ca" tabindex="-1">Generate CA <a class="header-anchor" href="#generate-ca" aria-label="Permalink to “Generate CA”">​</a></h3><ol><li><p>Generate RSA</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -aes256</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 4096</span></span></code></pre></div></li><li><p>Generate a public CA Cert</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 365</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -key</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca.pem</span></span></code></pre></div></li></ol><p>Create a self-signed CA creating a ca.key (private-key) and ca.crt (certificate):</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># ca.key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 4096</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># ca.crt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 365</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -key</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca.crt</span></span></code></pre></div><ul><li>Convert the files to a one line base64 decoded string (only works on Linux <code>base64</code> tool)</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca.key</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> base64</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span></span></code></pre></div><h3 id="generate-certificate" tabindex="-1">Generate Certificate <a class="header-anchor" href="#generate-certificate" aria-label="Permalink to “Generate Certificate”">​</a></h3><ol><li><p>Create a RSA key</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cert-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 4096</span></span></code></pre></div></li><li><p>Create a Certificate Signing Request (CSR)</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -subj</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">/CN=yourcn</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -key</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cert-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cert.csr</span></span></code></pre></div></li><li><p>Create a <code>extfile</code> with all the alternative names</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">subjectAltName=DNS:your-dns.record,IP:257.10.10.1</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> extfile.cnf</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># optional</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> extendedKeyUsage</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> serverAuth</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> extfile.cnf</span></span></code></pre></div></li><li><p>Create the certificate</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -req</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 365</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -in</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cert.csr</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -CA</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -CAkey</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> ca-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> cert.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -extfile</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> extfile.cnf</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -CAcreateserial</span></span></code></pre></div></li></ol><h2 id="certificate-formats" tabindex="-1">Certificate Formats <a class="header-anchor" href="#certificate-formats" aria-label="Permalink to “Certificate Formats”">​</a></h2><p>X.509 Certificates exist in Base64 Formats <strong>PEM (.pem, .crt, .ca-bundle)</strong>, <strong>PKCS#7 (.p7b, p7s)</strong> and Binary Formats <strong>DER (.der, .cer)</strong>, <strong>PKCS#12 (.pfx, p12)</strong></p><h3 id="convert-certs" tabindex="-1">Convert Certs <a class="header-anchor" href="#convert-certs" aria-label="Permalink to “Convert Certs”">​</a></h3><table tabindex="0"><thead><tr><th>Command</th><th>Conversion</th></tr></thead><tbody><tr><td><code>openssl x509 -outform der -in cert.pem -out cert.der</code></td><td>PEM to DER</td></tr><tr><td><code>openssl x509 -inform der -in cert.der -out cert.pem</code></td><td>DER to PEM</td></tr><tr><td><code>openssl pkcs12 -in cert.pfx -out cert.pem -nodes</code></td><td>PFX to PEM</td></tr></tbody></table><h2 id="verify-certificates" tabindex="-1">Verify Certificates <a class="header-anchor" href="#verify-certificates" aria-label="Permalink to “Verify Certificates”">​</a></h2><p><code>openssl verify -CAfile ca.pem -verbose cert.pem</code></p><h2 id="install-the-ca-cert-as-a-trusted-root-ca" tabindex="-1">Install the CA Cert as a trusted root CA <a class="header-anchor" href="#install-the-ca-cert-as-a-trusted-root-ca" aria-label="Permalink to “Install the CA Cert as a trusted root CA”">​</a></h2><h3 id="on-debian-derivatives" tabindex="-1">On Debian &amp; Derivatives <a class="header-anchor" href="#on-debian-derivatives" aria-label="Permalink to “On Debian &amp; Derivatives”">​</a></h3><ul><li><p>Move the CA certificate (<code>ca.pem</code>) into <code>/usr/local/share/ca-certificates/ca.crt</code></p></li><li><p>Update the Cert Store with:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> update-ca-certificates</span></span></code></pre></div></li></ul><p>Refer the documentation <a href="https://wiki.debian.org/Self-Signed_Certificate" target="_blank" rel="noreferrer">here</a> and <a href="https://manpages.debian.org/buster/ca-certificates/update-ca-certificates.8.en.html" target="_blank" rel="noreferrer">here.</a></p><h3 id="on-fedora" tabindex="-1">On Fedora <a class="header-anchor" href="#on-fedora" aria-label="Permalink to “On Fedora”">​</a></h3><ul><li><p>Move the CA certificate (<code>ca.pem</code>) to <code>/etc/pki/ca-trust/source/anchors/ca.pem</code> or <code>/usr/share/pki/ca-trust-source/anchors/ca.pem</code></p></li><li><p>Now run (with sudo if necessary):</p></li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">update-ca-trust</span></span></code></pre></div><p>Refer the documentation <a href="https://docs.fedoraproject.org/en-US/quick-docs/using-shared-system-certificates/" target="_blank" rel="noreferrer">here.</a></p><h3 id="on-arch" tabindex="-1">On Arch <a class="header-anchor" href="#on-arch" aria-label="Permalink to “On Arch”">​</a></h3><p>System-wide - Arch(p11-kit) (From arch wiki)</p><ul><li><p>Run (As root)</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">trust</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> anchor</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --store</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> myCA.crt</span></span></code></pre></div></li><li><p>The certificate will be written to /etc/ca-certificates/trust-source/myCA.p11-kit and the &quot;legacy&quot; directories automatically updated</p></li><li><p>If you get &quot;no configured writeable location&quot; or a similar error, import the CA manually:</p></li><li><p>Copy the certificate to the /etc/ca-certificates/trust-source/anchors directory</p></li><li><p>and then</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">update-ca-trust</span></span></code></pre></div></li></ul><p>wiki page <a href="https://wiki.archlinux.org/title/User:Grawity/Adding_a_trusted_CA_certificate" target="_blank" rel="noreferrer">here</a></p><h3 id="on-windows" tabindex="-1">On Windows <a class="header-anchor" href="#on-windows" aria-label="Permalink to “On Windows”">​</a></h3><p>Assuming the path to your generated CA certificate as <code>C:\\ca.pem</code>, run:</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">Import-Certificate</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">FilePath </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">C:\\ca.pem</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#DBD7CAEE;">CertStoreLocation Cert:\\LocalMachine\\Root</span></span></code></pre></div><ul><li>Set <code>-CertStoreLocation</code> to <code>Cert:\\CurrentUser\\Root</code> in case you want to trust certificates only for the logged in user</li></ul><p>OR</p><p>In Command Prompt, run:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">certutil.exe</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -addstore</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">a.pem</span></span></code></pre></div><ul><li><code>certutil.exe</code> is a built-in tool (classic <code>System32</code> one) and adds a system-wide trust anchor</li></ul><h3 id="on-android" tabindex="-1">On Android <a class="header-anchor" href="#on-android" aria-label="Permalink to “On Android”">​</a></h3><p>The exact steps vary device-to-device, but here is a generalised guide:</p><ol><li>Open Phone Settings</li><li>Locate <code>Encryption and Credentials</code> section. It is generally found under <code>Settings &gt; Security &gt; Encryption and Credentials</code></li><li>Choose <code>Install a certificate</code></li><li>Choose <code>CA Certificate</code></li><li>Locate the certificate file <code>ca.pem</code> on your SD Card/Internal Storage using the file manager.</li><li>Select to load it.</li><li>Done!</li></ol><h2 id="ssl-security" tabindex="-1">SSL Security <a class="header-anchor" href="#ssl-security" aria-label="Permalink to “SSL Security”">​</a></h2><h3 id="tls-version-and-ciphers" tabindex="-1">TLS Version and Ciphers <a class="header-anchor" href="#tls-version-and-ciphers" aria-label="Permalink to “TLS Version and Ciphers”">​</a></h3><p>Scanning for TLS Version and supported Ciphers: <code>nmap --script ssl-enum-ciphers &lt;target&gt;</code></p><ul><li><a href="https://www.ssllabs.com/projects/index.html" target="_blank" rel="noreferrer">Qualys SSL Labs</a> SSL Security Tools by Qualys</li></ul>`,44)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};