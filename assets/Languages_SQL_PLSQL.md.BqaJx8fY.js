import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"PL/SQL","description":"Procedural Structured Query Language","frontmatter":{"title":"PL/SQL","description":"Procedural Structured Query Language"},"headers":[],"relativePath":"Languages/SQL/PLSQL.md","filePath":"Languages/SQL/PLSQL.md","lastUpdated":1756574703000}`);var a={name:`Languages/SQL/PLSQL.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="pl-sql" tabindex="-1">PL/SQL <a class="header-anchor" href="#pl-sql" aria-label="Permalink to “PL/SQL”">​</a></h1><h2 id="wrappers" tabindex="-1">Wrappers <a class="header-anchor" href="#wrappers" aria-label="Permalink to “Wrappers”">​</a></h2><ul><li><p>Wrapping is the process of hiding PL/SQL source code</p></li><li><p>Wrapping helps to protect your source code by converting it into an intermediate form of object code. By hiding application internals, the wrapper prevents:</p><ul><li>misuse of your application by other developers</li><li>exposure of your algorithms to business competitors</li></ul></li><li><p>You can wrap PL/SQL source code with wither the wrap utility or <code>DBMS_DDL</code> subprograms</p></li></ul><p>Limitations:</p><ul><li>Cannot wrap code for triggers</li><li>Not downward compatible</li><li>Does not detect syntax or semantic errors</li><li>Wrapped code is twice or thrice larger than the original file</li></ul>`,5)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};