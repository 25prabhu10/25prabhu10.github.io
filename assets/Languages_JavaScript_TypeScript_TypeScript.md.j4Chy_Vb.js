import{A as e,d as t,m as n}from"./chunks/runtime-core.esm-bundler.BXAIOQQS.js";import{t as r}from"./chunks/plugin-vue_export-helper.CtN8rQnz.js";const i=JSON.parse(`{"title":"TypeScript","description":"TypeScript is JavaScript with syntax for types","frontmatter":{"title":"TypeScript","description":"TypeScript is JavaScript with syntax for types"},"headers":[],"relativePath":"Languages/JavaScript/TypeScript/TypeScript.md","filePath":"Languages/JavaScript/TypeScript/TypeScript.md","lastUpdated":1756574703000}`);var a={name:`Languages/JavaScript/TypeScript/TypeScript.md`};function o(r,i,a,o,s,c){return e(),t(`div`,null,[...i[0]||=[n(`<h1 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to “TypeScript”">​</a></h1><p>TypeScript is JavaScript with syntax for types</p><p>It was developed by Microsoft in 2012 and is a superset of JavaScript</p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to “Introduction”">​</a></h2><p>TypeScript has <em>type safety</em> (using types to prevent programs from doing invalid things)</p><ul><li><p>Strongly typed</p></li><li><p>Wrapper around JavaScript</p></li><li><p>TypeScript --compiles to--&gt; JavaScript</p></li><li><p>TypeScript files have <code>.ts</code> extension</p></li></ul><h3 id="typescript-features" tabindex="-1">TypeScript Features <a class="header-anchor" href="#typescript-features" aria-label="Permalink to “TypeScript Features”">​</a></h3><ul><li><p>Static Type checking</p></li><li><p>Can use Non-JavaScript features like <a href="#interface">Interface</a> or <a href="#generics">Generics</a></p></li><li><p>Use Next-gen JavaScript features now and compile it to older versions</p></li><li><p>Meta-Programming features like <a href="#decorators">Decorators</a></p></li><li><p><strong>TypeScript preserves the runtime behaviour of JavaScript</strong></p></li><li><p>Type of a variable will be implicitly inferred if it is initialized during declaration</p></li></ul><h2 id="typescript-compiler" tabindex="-1">TypeScript Compiler <a class="header-anchor" href="#typescript-compiler" aria-label="Permalink to “TypeScript Compiler”">​</a></h2><p>JavaScript runtimes (browsers, Node.js, etc.) do not understand TypeScript code, so it must be compiled to JavaScript before it can be executed</p><ul><li>New versions of some runtimes can understand TypeScript code directly (e.g. <a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a>, <a href="https://bun.sh/" target="_blank" rel="noreferrer">Bun</a>)</li></ul><p>TypeScript code needs to be compiled to JavaScript code before it can be executed in a browser or Node.js (or any other JavaScript runtime)</p><ul><li>TypeScript&#39;s <a href="https://www.npmjs.com/package/typescript" target="_blank" rel="noreferrer"><code>tsc</code></a> CLI compiles TypeScript code to JavaScript</li><li>It is a <em>transpiler</em> (a compiler that converts source code from one language to another)</li></ul><h3 id="how-programs-are-compiled" tabindex="-1">How programs are compiled <a class="header-anchor" href="#how-programs-are-compiled" aria-label="Permalink to “How programs are compiled”">​</a></h3><p>Ans: Programs are files that contain a bunch of text. That text is parsed by a special program called a <em>compiler</em>, which transforms it into an <strong>abstract syntax tree (AST)</strong>, a data structure that ignores things like whitespace, comments, and where you stand on the tabs versus spaces debate. The compiler then converts that <em>AST</em> to a lower-level representation called <em>bytecode</em>. You can feed that bytecode into another program called a <em>runtime</em> to evaluate it and get a result</p><ul><li><p>TypeScript dose not compile straight to bytecode</p></li><li><p>TypeScript <strong>compiles</strong> to <strong>JavaScript</strong> code! This JavaScript code is run in browser or <a href="../Node.js">Node.js</a></p></li></ul><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>JavaScript compilers and runtime tend to be smashed into a single program called an engine; as a programmer, this is what you&#39;ll normally interact with. It&#39;s how V8 (the engine powering NodeJS, Chrome, and Opera), SpiderMonkey (Firefox), JSCore (Safari), and Chakra (Edge) work, and it&#39;s what gives JavaScript the appearance of being an interpreted language</p></div><h3 id="using-typescript-compiler" tabindex="-1">Using TypeScript Compiler <a class="header-anchor" href="#using-typescript-compiler" aria-label="Permalink to “Using TypeScript Compiler”">​</a></h3><ol><li><p>Install TypeScript compiler as global package</p></li><li><p>Setup TypeScript in individual projects (recommended) and use npm scripts or <a href="./../Tools/Gulp.js/Gulp.js.html"><code>gulp</code></a> or any other tool</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># initialize a new NPM project (follow the prompts)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># install TypeScript and type declarations for NodeJS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> typescript</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> @types/node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># create a new file called index.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># add some TypeScript code to index.ts</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">console.log(&#39;Hello, TypeScript!&#39;);</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># compile the TypeScript code to JavaScript</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> tsc</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># it will create a new file called index.js</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># run the JavaScript code</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> index.js</span></span></code></pre></div></li><li><p>You can install TypeScript globally and use it to compile TypeScript files</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># install TypeScript globally</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> typescript</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># compile the TypeScript code to JavaScript</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">tsc</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> index.ts</span></span></code></pre></div></li><li><p>You can watch for changes in TypeScript files and compile them automatically</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># watch for changes in TypeScript files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">tsc</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> index.ts</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --watch</span></span></code></pre></div></li></ol><h3 id="typescript-compiler-configuration" tabindex="-1">TypeScript Compiler Configuration <a class="header-anchor" href="#typescript-compiler-configuration" aria-label="Permalink to “TypeScript Compiler Configuration”">​</a></h3><p>Using <code>tsconfig.json</code> or <code>jsconfig.json</code> file, we can configure the TypeScript compiler to compile the TypeScript code in a specific way</p><p>The below command generates <a href="https://www.typescriptlang.org/docs/handbook/tsconfig-json.html" target="_blank" rel="noreferrer"><code>tsconfig.json</code></a> file:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># will create a tsconfig.json file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> --init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># after initializing, TypeScript compiler</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"># will look into this file for compilation configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> tsc</span></span></code></pre></div><p><code>tsconfig.json</code> (recommended base) file contains:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">compilerOptions</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">target</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">es2016</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">commonjs</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">esModuleInterop</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">forceConsistentCasingInFileNames</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">strict</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">skipLibCheck</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">display</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Recommended</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">$schema</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">https://json.schemastore.org/tsconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><p>Common Compiler Options:</p><ul><li><code>&quot;target&quot;:&quot;es2016</code> (default <code>es5</code>): Set the JavaScript language version for emitted JavaScript and include compatible library declarations</li><li><code>&quot;module&quot;: &quot;commonjs&quot;</code>: Specify module code generation</li><li><code>&quot;esModuleInterop&quot;: true</code>: Interop with CommonJS/AMD/UMD modules</li><li><code>&quot;forceConsistentCasingInFileNames&quot;: true</code>: Ensure that casing is correct in imports</li><li><code>&quot;strict&quot;: true</code>: Enable all strict type-checking optionsA</li><li><code>&quot;skipLibCheck&quot;: true</code>: Skip type checking of all declaration files (<code>.d.ts</code>)</li><li><code>include: [&quot;src/**/*&quot;]</code>: Files to include in compilation</li><li><code>exclude: [&quot;node_modules&quot;]</code>: Files to exclude from compilation</li><li><code>outDir: &quot;dist&quot;</code>: Redirect output structure to the directory</li><li><code>onEmit: true</code>: Whether to emit JavaScript files or not after compilation</li></ul><p><a href="https://www.typescriptlang.org/tsconfig/" target="_blank" rel="noreferrer">More <code>tsconfig.json</code> options</a> and <a href="https://github.com/tsconfig/bases" target="_blank" rel="noreferrer">Centralized Recommendations for TSConfig bases</a> are available</p><p><em>Example:</em> Sample Node.js Project</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">compilerOptions</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">NodeNext</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">moduleResolution</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">NodeNext</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">target</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ES2020</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">sourceMap</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">outDir</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">dist</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">include</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">src/**/*</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Recommended options:</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">compilerOptions</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* Base Options: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">skipLibCheck</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Skip type checking of declaration files</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">target</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">es2022</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Specify ECMAScript target version</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">esModuleInterop</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Emit additional JavaScript to ease interop with CommonJS modules</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">allowJs</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Allows JavaScript files to be imported into the TypeScript project</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">resolveJsonModule</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Allows JSON files to be imported into your TypeScript project</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">moduleDetection</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">force</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Treat all \`.ts\` files as a module, instead of a script</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">isolatedModules</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Ensure that each file can be safely transpiled without relying on other files</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* Strictness */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">strict</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Enable all strict type-checking options</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">noUncheckedIndexedAccess</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Disallow unchecked access to indexed properties</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* If transpiling with tsc: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">NodeNext</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">outDir</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">dist</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">sourceMap</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">verbatimModuleSyntax</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* AND if you&#39;re building for a library: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">declaration</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* AND if you&#39;re building for a library in a monorepo: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">composite</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">declarationMap</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* If NOT transpiling with tsc: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Preserve</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">noEmit</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* If your code runs in the DOM: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">es2022</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">dom</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">dom.iterable</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">    /* If your code doesn&#39;t run in the DOM: */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">es2022</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">include</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">src/**/*</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;">$schema</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">https://json.schemastore.org/tsconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h4 id="typescript-doesn-t-polyfill" tabindex="-1">TypeScript Doesn&#39;t Polyfill <a class="header-anchor" href="#typescript-doesn-t-polyfill" aria-label="Permalink to “TypeScript Doesn&#39;t Polyfill”">​</a></h4><p><code>target</code> option in <code>tsconfig.json</code> file is used to specify the ECMAScript version of the output JavaScript files</p><ul><li><p>While <code>target</code> can transpile newer syntaxes into older environments, it won&#39;t do the same with API&#39;s that don&#39;t exist in the target environment</p></li><li><p>The target environment will throw an error if the API doesn&#39;t exist, you configure the environment your code executes in with <code>lib</code> option</p></li><li><p>We need to configure polyfills for the target environment</p></li></ul><h3 id="typescript-compiler-flags" tabindex="-1">TypeScript Compiler Flags <a class="header-anchor" href="#typescript-compiler-flags" aria-label="Permalink to “TypeScript Compiler Flags”">​</a></h3><p>You can pass flags to the TypeScript compiler to change its behaviour instead of using a <code>tsconfig.json</code> file</p><ul><li><code>--init</code>: Initialize a TypeScript project and create a <code>tsconfig.json</code> file</li><li><code>--watch</code>: Watch input files and trigger recompilation on changes</li><li><code>--noEmitOnError</code>: Do not emit outputs if any errors were reported</li><li><code>--strict</code>: Enable all strict type-checking options</li><li><code>--noImplicitAny</code>: Raise error on expressions and declarations with an implied <code>any</code> type</li></ul><h2 id="typescript-basics" tabindex="-1">TypeScript Basics <a class="header-anchor" href="#typescript-basics" aria-label="Permalink to “TypeScript Basics”">​</a></h2><p>TypeScript uses annotations to help you catch errors and bugs in your code</p><ul><li>TypeScript annotations are used to define the type of a variable, function, or class</li><li>TypeScript annotations are optional, but they are recommended to help you catch errors and bugs in your code</li></ul><p>Annotations will often use the <code>:</code> character, this is used to tell TypeScript that a variable or function parameter is of a certain type</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// TypeScript annotation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><h3 id="type-annotations" tabindex="-1">Type Annotations <a class="header-anchor" href="#type-annotations" aria-label="Permalink to “Type Annotations”">​</a></h3><p>Type annotations are used to explicitly specify the type of a variable, function parameter, or function return value</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// variable annotation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// function annotation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> greet</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> \`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Hello, </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="type-inference" tabindex="-1">Type Inference <a class="header-anchor" href="#type-inference" aria-label="Permalink to “Type Inference”">​</a></h3><p>TypeScript can infer the type of a variable based on its value</p><ul><li>If you initialize a variable with a value, TypeScript will infer the type of the variable based on the value</li><li>If you don&#39;t initialize a variable with a value, TypeScript will infer the type of the variable as <code>any</code></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // TypeScript infers the type of name as \`string\`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // TypeScript infers the type of age as \`any\`</span></span></code></pre></div><h2 id="type-system" tabindex="-1">Type System <a class="header-anchor" href="#type-system" aria-label="Permalink to “Type System”">​</a></h2><p>A set of rules that a type checker uses to assign types to your program</p><ul><li>In general, it is good style to let TypeScript infer as many types as it can for you, keeping explicitly typed code to a minimum</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// array of heterogeneous data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// tuples</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> tup</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">yes</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 99</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// enum</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Gray</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Green</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Blue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> myColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Green</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><h3 id="type-casting" tabindex="-1">Type Casting <a class="header-anchor" href="#type-casting" aria-label="Permalink to “Type Casting”">​</a></h3><p>Type casting is a way to tell TypeScript that you know more about the type of a value than TypeScript does and that you want to treat it as a different type</p><ul><li>Type casting is done using the <code>as</code> keyword</li><li>Type casting is also known as <em>type assertion</em></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> userInp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Type: HTMLElement</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Error: as HTMLElement is generic, hence</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// not all HTML elements have the &#39;value&#39; property</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">userInp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Type Casting</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> userInp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// alternative syntax</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> userInp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">userInp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><ul><li>Nullable:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> userInp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">userInp</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">userInp</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="type-checking" tabindex="-1">Type Checking <a class="header-anchor" href="#type-checking" aria-label="Permalink to “Type Checking”">​</a></h3><p>TypeScript can check the type of a variable at runtime</p><ul><li><p><code>typeof</code> variable;</p><ul><li>Check type of variable:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;"> is a string.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul><p>Nullable types</p><ul><li><p>To do this add <code>&quot;strictNullChecks&quot;: false</code> to <code>tsconfig.json</code> file</p></li><li><p>Now if we try to assign null to any other type variable, we get an error</p></li><li><p>To make variable null, add union to it:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div></li></ul><blockquote><p>Note: once a variable is set to null, will it give error if we assign different value to it.</p></blockquote><h3 id="type-guard" tabindex="-1">Type Guard <a class="header-anchor" href="#type-guard" aria-label="Permalink to “Type Guard”">​</a></h3><p>Type guards are some expressions that perform runtime checks that guarantee the type in some scope</p><ul><li>Base types</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // This will throw an error</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Type guard</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>User defined types</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  privileges</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Employee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  startDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ElevatedEmployee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> show</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ElevatedEmployee</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Type guards</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">privileges</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">privileges</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">startDate</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">startDate</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Class</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  drive</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Driving...</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Truck</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  drive</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Driving Truck...</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  loadCargo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">amount</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Vehicle</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Truck</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> v2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Truck</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> useVehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">v</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  v</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">drive</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">v</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Truck</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    v</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">loadCargo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="wider-vs-narrower-types" tabindex="-1">Wider vs. Narrower Types <a class="header-anchor" href="#wider-vs-narrower-types" aria-label="Permalink to “Wider vs. Narrower Types”">​</a></h3><p>TypeScript uses the concept of <em>wider</em> and <em>narrower</em> types to determine the type of a variable</p><p>Some types are <em>wider</em> than others, <code>string</code> is wider than the literal string <code>&quot;small&quot;</code>. This is because <code>string</code> can be any string, while <code>&quot;small&quot;</code> can only be the string <code>&quot;small&quot;</code>. Hence, <code>&quot;small&quot;</code> is a <em>narrower</em> type than <code>string</code></p><p>It is similar to the concept of &#39;subtypes&#39; and &#39;supertypes&#39; in set theory</p><p>Narrowing in TypeScript lets us take a wider type and make it narrower using runtime code.</p><p>Narrowing with <code>typeof</code>, <code>instanceof</code>, and <code>in</code>:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// you can narrow down the type of a variable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getAlbumYear</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">year</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> year</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">The album was released in </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toUppercase</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // \`year\` is string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> year</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">The album was released in </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toFixed</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // \`year\` is number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// using \`in\` operator</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getAlbumYear</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">year</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">toUppercase</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> year</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">The album was released in </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toUppercase</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // \`year\` is string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">The album was released in </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toFixed</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // \`year\` is number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// using \`instanceof\` operator</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> year</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getAlbumYear</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">year</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">year</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">The album was released in </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // \`year\` is Album</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">The album was released in </span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#C98A7D;">year</span><span style="--shiki-light:#032F62;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // \`year\` is string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><h3 id="declaration-merging" tabindex="-1">Declaration Merging <a class="header-anchor" href="#declaration-merging" aria-label="Permalink to “Declaration Merging”">​</a></h3><p>Declaration merging is a feature of TypeScript that allows you to combine multiple declarations of the same name into a single definition</p><ul><li>It is used to extend interfaces, functions, classes, and enums</li><li>When multiple interfaces with the same name in the same scope are created, TypeScript automatically merges them</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><h2 id="data-types" tabindex="-1">Data Types <a class="header-anchor" href="#data-types" aria-label="Permalink to “Data Types”">​</a></h2><p>A set of values and the things you can do with them. TypeScript has several built-in data types that you can use to define variables</p><p><img src="/assets/TypeScript_Types.ftNRZC_U.png" alt="Cheat Sheet of TypeScript Types"><img src="/assets/TypeScript_Control_Flow_Analysis.DImH0294.png" alt="TypeScript Control Flow Analysis"></p><h3 id="typescript-type-hierarchy" tabindex="-1">TypeScript Type Hierarchy <a class="header-anchor" href="#typescript-type-hierarchy" aria-label="Permalink to “TypeScript Type Hierarchy”">​</a></h3><p>TypeScript has a type hierarchy that is used to define the types of variables, functions, and classes</p><ul><li>The type hierarchy is a tree-like structure that shows the relationships between different types</li></ul><p><img src="/assets/types.PaK2bIC8.png" alt="TypeScript type hierarchy"></p><h3 id="basic-types" tabindex="-1">Basic Types <a class="header-anchor" href="#basic-types" aria-label="Permalink to “Basic Types”">​</a></h3><ol><li><p><code>number</code> (floating point): All numbers, no differentiation between integers or floats</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 5.3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> vars</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 24</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div></li><li><p><code>string</code>: All text values</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Same</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">As</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> \`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">JavaScript</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div></li><li><p><code>boolean</code>: Just like JavaScript, <code>true</code> or <code>false</code></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> d</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> e</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> true</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // valid as \`true\` is a subtype of \`boolean\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Type &#39;false&#39; is not assignable to type &#39;true&#39;</span></span></code></pre></div></li><li><p><code>bigint</code>: Special numeric type that represents whole numbers larger than <code>2^53 - 1</code></p><ul><li><code>n</code> suffix is used to create a <code>bigint</code> value</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> big</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> bigint</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div></li><li><p><code>symbol</code>: Unique and immutable value that may be used as an identifier for object properties</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> sym1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">sym1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">value</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">sym1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // &quot;value&quot;</span></span></code></pre></div></li><li><p><code>null</code>: Represents an intentional absence of any object value</p></li><li><p><code>undefined</code>: Represents an uninitialized value</p></li><li><p><code>any</code> (default type): Any kind of value, no specific type assignment</p><ul><li>Avoid using <code>any</code> as it defeats the purpose of using TypeScript (it is not type-safe)</li><li>If you don&#39;t specify a type, TypeScript will infer the type as <code>any</code></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// These variables can be of any type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Implicit cast to type \`any\`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> variable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div></li></ol><p>You can express much more complex types (arrays, objects, etc.) using a combination of these basic types</p><h3 id="unknown-type" tabindex="-1">Unknown Type <a class="header-anchor" href="#unknown-type" aria-label="Permalink to “Unknown Type”">​</a></h3><p>Unknown is the <a href="#wider-vs-narrower-types">widest type</a> in TypeScript. It represents something that we don&#39;t know what it is</p><ul><li><code>unknown</code> is preferred choice to represent a truly unknown value, like data coming from outside source</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> fn</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Anything is assignable to unknown!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">({});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">([]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {});</span></span></code></pre></div><ul><li>Error is thrown if we try to assign a variable of <code>unknown</code> type to any other variable</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> userName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> userAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">userName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Will throw an error</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">userAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // No error</span></span></code></pre></div><p><code>any</code> vs. <code>unknown</code>:</p><ul><li><code>any</code> doesn&#39;t fit the definition of &#39;wide&#39; and &#39;narrow&#39; types</li><li>It breaks the type system. It&#39;s not really a type al all - it&#39;s a way to opt out of the type checking</li><li><code>any</code> can be assigned to any type, and any type can be assigned to <code>any</code></li><li><code>unknown</code> is a type-safe counterpart of <code>any</code>. It is a type that is safe to assign to, but not from</li></ul><p><code>unknown</code> means <em>&quot;I don&#39;t know what this is&quot;</em>, while <code>any</code> means <em>&quot;I don&#39;t care what this is&quot;</em></p><h3 id="never-type" tabindex="-1">Never Type <a class="header-anchor" href="#never-type" aria-label="Permalink to “Never Type”">​</a></h3><p>The <code>never</code> type represents the type of values that never occur</p><ul><li>It is the <a href="#wider-vs-narrower-types">narrowest type</a> in TypeScript</li><li>It is used to represent the type of values that never occur, like a function that never returns</li><li>It is a subtype of all types, but no type is a subtype of <code>never</code></li><li>You cannot assign anything to <code>never</code>, except <code>never</code> itself</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// the function never returns a value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> generateError</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">An error occurred!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> fn</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Argument of type &#39;string&#39; is not assignable to parameter of type &#39;never&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">generateError</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">());</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // OK as \`generateError()\` returns never</span></span></code></pre></div><p><a href="#void-type"><code>void</code></a> vs. <code>never</code>:</p><ul><li><code>void</code> is a type that represents the absence of a value</li><li><code>never</code> is a type that represents a value that never occurs</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// the function returns nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// the function never returns a value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> generateError</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">An error occurred!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="void-type" tabindex="-1">Void Type <a class="header-anchor" href="#void-type" aria-label="Permalink to “Void Type”">​</a></h3><p>The <code>void</code> type is used to represent the absence of a value</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to “Type Aliases”">​</a></h2><p>It is a way to give a name to a type, and use that name wherever the type is needed</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// creating a type alias</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ConversionResType</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">as-number</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">as-text</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> combine</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  inp1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // using type alias</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  inp2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  resultConversion</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ConversionResType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="interface" tabindex="-1">Interface <a class="header-anchor" href="#interface" aria-label="Permalink to “Interface”">​</a></h2><p>An interface is a way to define a contract in your code and is used to define the structure of an object</p><ul><li>It is core part of TypeScript (shipped with first version)</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  artist</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  releaseYear</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  artist</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  releaseYear</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Interfaces are used to define the structure of an object</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> newCar</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  seats</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><ul><li>Interfaces have the ability to extend other interfaces</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Admin</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  privileges</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  startDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// has all properties of Admin and Employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ElevatedEmployee</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Admin</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> emp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ElevatedEmployee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Java</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  privileges</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">None</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  startDate</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><ul><li><p>Prefer <code>interface extends</code> over <a href="#intersection-types">Intersections</a> as it dose not provide errors if same key is used in both interfaces with different types</p></li><li><p><code>interface extends</code> has better performance</p></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // no error and \`age\` is of type \`never\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> User1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Interface &#39;User&#39; incorrectly extends interface &#39;User1&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  //  Types of property &#39;age&#39; are incompatible.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  //    Type &#39;string&#39; is not assignable to type &#39;number&#39;.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><p>Modifiers:</p><ul><li><code>readonly</code> properties</li><li>Optional properties and functions</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  color</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><p>Interfaces for functions (Function Types):</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// type AddFunc = (a: number, b: number) =&gt; number;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Same with interface</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AddFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><p><code>type</code> vs <code>interface</code>:</p><ul><li>By default, use <code>type</code> unless you need to use <code>interface extends</code></li></ul><table tabindex="0"><thead><tr><th>Interfaces</th><th><a href="#type-aliases">Type Aliases</a></th></tr></thead><tbody><tr><td>Preferred for objects and classes</td><td>Preferred for functions and everything else</td></tr><tr><td>Open for extensions</td><td>Fixed object structure</td></tr><tr><td>Supports Inheritance</td><td>Can be done using <a href="#intersection-types">Intersection</a></td></tr><tr><td><a href="#declaration-merging">Declaration merging</a></td><td>No declaration merging</td></tr></tbody></table><p><img src="/assets/TypeScript_Interfaces.CHGmcvm1.png" alt="TypeScript Interfaces"></p><ul><li><code>abstract</code> vs <code>interface</code></li></ul><h2 id="arrays" tabindex="-1">Arrays <a class="header-anchor" href="#arrays" aria-label="Permalink to “Arrays”">​</a></h2><p>To define an <a href="./../JavaScript.html#array">array</a> in TypeScript, you can use the <code>[]</code> syntax</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> names</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Manu</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// TypeScript will infer the type of the array</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> names</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Manu</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">names</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Argument of type &#39;number&#39; is not assignable to parameter of type &#39;string&#39;</span></span></code></pre></div><p>Another way to define an array is to use the <code>Array</code> <a href="#generic-types">generic type</a></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> names</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Manu</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span></code></pre></div><ul><li>You can use <code>readonly</code> modifier to make an array immutable, mutable functions like <code>push</code>, <code>pop</code>, <code>splice</code>, etc. are not allowed</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> readOnlyGenres</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">rock</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">pop</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">unclassifiable</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">readOnlyGenres</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">jazz</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Property &#39;push&#39; does not exist on type &#39;readonly string[]&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Alternative syntax using Array type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> readOnlyGenres</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ReadonlyArray</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">rock</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">pop</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">unclassifiable</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span></code></pre></div><h3 id="tuple-type" tabindex="-1">Tuple Type <a class="header-anchor" href="#tuple-type" aria-label="Permalink to “Tuple Type”">​</a></h3><p>Tuples let you specify an array with a fixed number of elements, where each element has its own type</p><ul><li>Order is important</li></ul><p><em>Example:</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// typle</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Rubber Soul</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1965</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Error is thrown</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1965</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Type &#39;number&#39; is not assignable to type &#39;string&#39;</span></span></code></pre></div><ul><li><p>You can add elements to a tuple, but it defeats the purpose of using tuple over an array. Remove <code>push</code> function from tuple:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StrictTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">  Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> O</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">K</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> O</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> O</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">K</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">] }</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StrictTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;[</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // {0: number; 1: string }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">okay</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 123</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // error!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//~~~~ Property &#39;push&#39; does not exist on type { 0: number; 1: string; }</span></span></code></pre></div></li><li><p>Second option:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> testArray</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">testArray</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // error</span></span></code></pre></div></li></ul><h2 id="enum-type" tabindex="-1">Enum Type <a class="header-anchor" href="#enum-type" aria-label="Permalink to “Enum Type”">​</a></h2><p>Enums are used to define a set of named constants</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Up</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Down</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Left</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Right</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Up has value: 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// All of the following members are auto-incremented</span></span></code></pre></div><ul><li>Initialize values:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Up</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Down</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Left</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  Right</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Up has value: 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Down has value: 2</span></span></code></pre></div><ul><li>If string is used instead of numbers to initialize, we need to provide value to all the elements.</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ROLES</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  ADMIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ADMIN</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  READ_ONLY</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">  AUTHOR</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="objects" tabindex="-1">Objects <a class="header-anchor" href="#objects" aria-label="Permalink to “Objects”">​</a></h2><p>Same as <a href="./../JavaScript.html">JavaScript objects</a>, we can add types to the keys and values of the object</p><p><em>Example:</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> userData</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">; </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">; </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">wh</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">22</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  wh</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><ul><li><p>Complex objects</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> complex</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[]; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">output</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] } </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">3.99</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  output</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div></li><li><p>Create an object type and use it multiple times</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Complex</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[];</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> output</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> complex</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Complex</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">3.99</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  output</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div></li><li><p>Use <code>?</code> to make a key optional</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div></li></ul><h3 id="dynamic-object-keys" tabindex="-1">Dynamic Object Keys <a class="header-anchor" href="#dynamic-object-keys" aria-label="Permalink to “Dynamic Object Keys”">​</a></h3><p>In JavaScript, we can start with an empty object and add keys and values to it dynamically, but if we do the same in TypeScript, we get an error</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Grammy</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Property &#39;Grammy&#39; does not exist on type &#39;{}&#39;</span></span></code></pre></div><ul><li>We&#39;re &#39;indexing&#39; into <code>albumAwards</code> with a string key, <code>Grammy</code>, and assigning it a value</li><li>TypeScript doesn&#39;t know what keys <code>albumAwards</code> will have, so it throws an error</li><li>To fix this, we can use an <em>index signature</em></li><li><code>boolean</code> not allowed for keys</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Grammy</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">MercuryPrize</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Billboard</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><ul><li>The <code>[index: string]: boolean</code> syntax is an index signature</li><li>It tells TypeScript that <code>albumAwards</code> will have any number of keys, all of which will be strings, and all of which will have boolean values</li></ul><p>It is better to use <a href="#utility-types"><code>Record</code></a> utility type to define an object with dynamic keys</p><ul><li><code>Record</code> utility type supports union type for keys, but an index signature does not</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Grammy</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// using union type for keys</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAwards1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Grammy</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MercuryPrize</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Billboard</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  Grammy</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  MercuryPrize</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  Billboard</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAwards2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Grammy</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MercuryPrize</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Billboard</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // An index signature parameter type cannot be a literal type or generic type. Consider using a mapped object type instead.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  Grammy</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  MercuryPrize</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  Billboard</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><p>Combining know and dynamic keys:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// using type alias</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> BaseAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Grammy</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MercuryPrize</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Billboard</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ExtendedAlbumAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">BaseAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">award</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// using interfaces</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> BaseAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  Grammy</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  MercuryPrize</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  Billboard</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ExtendedAlbumAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> BaseAwards</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">award</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> extendedNominations</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ExtendedAlbumAwards</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  Grammy</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  MercuryPrize</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  Billboard</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Additional awards can be dynamically added</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">  &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">American Music Awards</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><h3 id="indexed-access-types" tabindex="-1">Indexed Access Types <a class="header-anchor" href="#indexed-access-types" aria-label="Permalink to “Indexed Access Types”">​</a></h3><p>Indexed access types are a way to get the type of a property in an object</p><p><em>Example:</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> UserRoleAttr</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      role</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      adminPassword</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      role</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      role</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">super-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      superAdminPassword</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Roles</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> UserRoleAttr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">role</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// &quot;admin&quot; | &quot;user&quot; | &quot;super-admin&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Roles</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> UserRoleAttr</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">role</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Cannot access &#39;UserRoleAttr.role&#39; because &#39;UserRoleAttr&#39; is a type, but not a namespace</span></span></code></pre></div><h3 id="propertykey-type" tabindex="-1"><code>PropertyKey</code> Type <a class="header-anchor" href="#propertykey-type" aria-label="Permalink to “PropertyKey Type”">​</a></h3><p><code>PropertyKey</code> is a built-in global type in TypeScript that represents the type of a property key</p><ul><li>It is useful when working with dynamic keys in objects</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// string | number | symbol</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> PropertyKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> PropertyKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> RecordWithAllKeys</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">PropertyKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span></code></pre></div><h3 id="object-type" tabindex="-1"><code>object</code> Type <a class="header-anchor" href="#object-type" aria-label="Permalink to “object Type”">​</a></h3><p><code>object</code> is a built-in global type in TypeScript that represents any non-primitive type</p><ul><li>Primitive types such as <code>number</code>, <code>string</code>, <code>boolean</code>, etc. cannot be assigned to a variable of type <code>object</code></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> acceptAllNonPrimitives</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">acceptAllNonPrimitives</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">({});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">acceptAllNonPrimitives</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">([]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">acceptAllNonPrimitives</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">acceptAllNonPrimitives</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Argument of type &#39;number&#39; is not assignable to parameter of type &#39;object&#39;</span></span></code></pre></div><p>It is better to use <a href="#utility-types"><code>Record</code></a> utility type instead of <code>object</code> type</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">getInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span></code></pre></div><h3 id="object-property-inference" tabindex="-1">Object Property Inference <a class="header-anchor" href="#object-property-inference" aria-label="Permalink to “Object Property Inference”">​</a></h3><p>Objects are mutable in JavaScript:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">staff-pick</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> updateStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">updateStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Error: Argument of type &#39;{ status: string; }&#39; is not assignable to parameter of type &#39;AlbumAttributes&#39;</span></span></code></pre></div><ul><li><p>TypeScript infers the type of <code>albumAttributes</code> as <code>{ status: string }</code> because it is mutable it can be reassigned, hence it throws an error</p></li><li><p>You can use inline object or add type annotation to fix the error</p></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">updateStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">});</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // No error</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">updateStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // No error</span></span></code></pre></div><p>An object variable declared with both <code>let</code> and <code>const</code> has properties that are mutable</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">staff-pick</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // can only be reassigned with valid values</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">invalid</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Type &#39;&quot;invalid&quot;&#39; is not assignable</span></span></code></pre></div><ul><li>To make object properties immutable, use <code>readonly</code> modifier</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">staff-pick</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Cannot assign to &#39;status&#39; because it is a read-only property</span></span></code></pre></div><ul><li>Use <code>Readonly</code> utility type to make all properties of an object readonly</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">staff-pick</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Readonly</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">AlbumAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><h2 id="union-types" tabindex="-1">Union Types <a class="header-anchor" href="#union-types" aria-label="Permalink to “Union Types”">​</a></h2><p>A union type is TypeScript&#39;s way of allowing a variable to have more than one type</p><ul><li>We use the <code>|</code> operator to define a union type</li><li>Each type of the union is called a <em>member</em> of the union</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> myAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">27</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // will cause error</span></span></code></pre></div><p>Combining unions with unions to make one big union:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DigitalFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MP3</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">FLAC</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> PhysicalFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">LP</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">CD</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Cassette</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DigitalFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> PhysicalFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> format</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">MP3</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><p>A union type is a <a href="#wider-vs-narrower-types">wider type</a> than its members. For example, <code>string | number</code> is wider than <code>string</code> or <code>number</code> on their own</p><h3 id="discriminated-unions" tabindex="-1">Discriminated Unions <a class="header-anchor" href="#discriminated-unions" aria-label="Permalink to “Discriminated Unions”">​</a></h3><p>A pattern that makes working with unions much easier and more robust</p><ul><li>A common pattern in TypeScript is to have a type that has a <code>kind</code> property</li><li>A discriminated union is a type that has a common property, the &#39;discriminant&#39;, which is a literal type that is unique to each member of the union</li></ul><p><em>Example:</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  state</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">loading</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">success</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  error</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // error actually exists only when state is &quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  data</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // data actually exists only when state is &quot;success&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// making \`State\` type a discriminated union</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">loading</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">success</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> error</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// better approach</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> LoadingState</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">loading</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ErrorState</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  error</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> SuccessState</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">success</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  data</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> LoadingState</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ErrorState</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> SuccessState</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`\`\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">typescript</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      role</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      adminPassword</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      role</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      role</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">super-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">      superAdminPassword</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> usr</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">JS</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  role</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">TS</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  role</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  adminPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">****</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> suAdmin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  id</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">C</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  role</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">super-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  superAdminPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">******</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Bird</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  type</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">bird</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  flyingSpeed</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Horse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  type</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">horse</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  runningSpeed</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Animal</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Bird</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Horse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> moveAnimal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">animal</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Animal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  switch</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">animal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    case</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">bird</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">      console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">animal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">flyingSpeed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">      break</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    case</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">horse</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">      console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">animal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">runningSpeed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">      break</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="intersection-types" tabindex="-1">Intersection Types <a class="header-anchor" href="#intersection-types" aria-label="Permalink to “Intersection Types”">​</a></h2><p>An intersection type lets us combine multiple object types into a single type that has all the features of the individual types</p><ul><li><p>Intersection types are denoted by the <code>&amp;</code> operator</p></li><li><p>Intersection types with objects:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// using \`type\` keyword</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  privileges</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Employee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  startDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// has all properties of Admin and Employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ElevatedEmployee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> emp</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> ElevatedEmployee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Java</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  privileges</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">None</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  startDate</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CEO</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Employee</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span></span></code></pre></div></li><li><p>If object types have same key with different types, the intersection type will have <code>never</code> type for that key</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // makes \`age\` of type \`never\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Error: Type &#39;number&#39; is not assignable to type &#39;never&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div></li><li><p>Intersection types with Primitive types:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StringAndNumber</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // it actually means \`never\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// because no value can be both a string and a number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Numeric</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Universal</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Numeric</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Universal is of type number,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// as it is the only intersection between</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Combinable and Numeric</span></span></code></pre></div></li></ul><h2 id="literal-types" tabindex="-1">Literal Types <a class="header-anchor" href="#literal-types" aria-label="Permalink to “Literal Types”">​</a></h2><p>TypeScript allows you to create types which represent a specific primitive value, these are called <em>literal types</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> YesOrNo</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">yes</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">no</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StatusCode</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 200</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 404</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 500</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TrueOrFalse</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> true</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> myAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 28</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Type &#39;28&#39; is not assignable to type &#39;80&#39;</span></span></code></pre></div><h2 id="variable-declaration" tabindex="-1">Variable Declaration <a class="header-anchor" href="#variable-declaration" aria-label="Permalink to “Variable Declaration”">​</a></h2><p>Use <code>let</code>, <code>const</code>, and <code>var</code> to declare variables</p><p><strong><code>let</code></strong>: Used to declare a variable that can be reassigned (mutable)</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">rock</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">country</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">electronic</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> albumGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">rock</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> handleGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">genre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">handleGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Argument of type &#39;string&#39; is not assignable to parameter of type &#39;AlbumGenre&#39;</span></span></code></pre></div><ul><li>As variable is mutable, we can reassign it, TypeScript will infer a wider type <code>string</code> for <code>albumGenre</code> in order to accommodate the reassignment</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> albumGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">rock</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> handleGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">genre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">handleGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // no more error</span></span></code></pre></div><p><strong><code>const</code></strong>: Used to declare a variable that cannot be reassigned (immutable)</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">rock</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> handleGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">genre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">handleGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">albumGenre</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // No error</span></span></code></pre></div><h3 id="const-assertions" tabindex="-1"><code>const</code> Assertions <a class="header-anchor" href="#const-assertions" aria-label="Permalink to “const Assertions”">​</a></h3><p>New construct for literal values called <code>const</code> assertions (v3.4)</p><p>We can signal to the language that:</p><ul><li>No literal types in that expression should be widened (e.g. no going from <code>&quot;hello&quot;</code> to <code>string</code>)</li><li>Object literals get <code>readonly</code> properties</li><li>Array literals become <code>readonly</code> tuples</li><li>It tells TypeScript to infer the most specific type for a variable</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Type &#39;&quot;hello&quot;&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Type &#39;readonly [10, 20]&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> y</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Type &#39;{ readonly text: &quot;hello&quot; }&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> z</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><p>This is useful when you want to prevent widening of literal types:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">new-release</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">staff-pick</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> AlbumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// \`status\` is of type &quot;new-release&quot; | &quot;on-sale&quot; | &quot;staff-pick&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// not of type &quot;on-sale&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// object literal is inferred</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> albumAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">on-sale</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// now \`status\` is of type</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// \`readonly status: &quot;on-sale&quot;;\`</span></span></code></pre></div><h2 id="utility-types" tabindex="-1">Utility Types <a class="header-anchor" href="#utility-types" aria-label="Permalink to “Utility Types”">​</a></h2><p>TypeScript provides several <a href="https://www.typescriptlang.org/docs/handbook/utility-types.html" target="_blank" rel="noreferrer">utility types</a> to facilitate common type transformations. These utilities are available globally</p><ul><li><code>Partial&lt;Type&gt;</code>: Create new object type with all properties set to optional</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  description</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> updateTodo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">todo</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> fieldsToUpdate</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Partial</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">fieldsToUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> todo1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">organize desk</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  description</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">clear clutter</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> todo2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> updateTodo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">todo1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  description</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">throw out trash</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Goal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  date</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> createGoal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> date</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Goal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> newGoal</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Partial</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Goal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // Perform validations if required</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  newGoal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  newGoal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">date</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> date</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> newGoal</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Goal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li><p><code>Required&lt;Type&gt;</code>: Create new object type with all properties set to required</p><ul><li><code>Required</code> only work one level deep</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Props</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  b</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Props</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // OK</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> obj2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Required</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Props</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: property &#39;b&#39; is missing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  artist</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  releaseYear</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  genre</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    parentGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    subGenre</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> RequiredAlbum</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Required</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// { title: string;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//   artist: string;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//   releaseYear: number;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//   genre: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//     parentGenre?: string;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // still optional</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//     subGenre?: string;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//   };</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// }</span></span></code></pre></div></li><li><p><code>Awaited&lt;Type&gt;</code>: Unwrap the type of a promise</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> A</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Awaited</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// type A = string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> B</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Awaited</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&gt;&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// type B = number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> C</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Awaited</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// type C = number | boolean</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getAPIResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Hello, TypeScript!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Response</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Awaited</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">ReturnType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> getAPIResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;&gt;;</span></span></code></pre></div></li><li><p><code>Readonly&lt;Type&gt;</code>: Make all properties in an object readonly</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> todo</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Readonly</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Delete inactive users</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Hello</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: Cannot assign to &#39;title&#39; because it is a read-only property</span></span></code></pre></div></li><li><p><code>Record&lt;Keys, Type&gt;</code>: Construct a type with a set of properties Keys of type Type</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CatInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  breed</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CatName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">miffy</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">boris</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">mordred</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> cats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">CatName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">CatInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  miffy</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">breed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Persian</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  boris</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">breed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Maine Coon</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  mordred</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">breed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">British Shorthair</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">cats</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">boris</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // const cats: Record&lt;CatName, CatInfo&gt;</span></span></code></pre></div></li><li><p><code>Pick&lt;Type, Keys</code>: Constructs a type by picking the set of properties <code>Keys</code> (string literal or union of string literals) from <code>Type</code></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  description</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  completed</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TodoPreview</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Pick</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">title</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">completed</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> todo</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TodoPreview</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  title</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Clean room</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  completed</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div></li><li><p><code>Omit&lt;Type, Keys&gt;</code>: Constructs a type by picking all properties from <code>Type</code> and then removing <code>Keys</code> (string literal or union of string literals). The opposite of <code>Pick</code></p><ul><li><code>Omit</code> is looser than <code>Pick</code>, you are able to exclude properties that don&#39;t exist on an object type</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  description</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  completed</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  createdAt</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TodoPreview</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Todo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">description</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  firstName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// &quot;name&quot; is not present in the User type</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// but TypeScript will not throw an error</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Spread</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Spread</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> overWriteMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> overWriteMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> dontOverwriteMe</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// creating a strict Omit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StrictOmit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> StrictOmit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: &#39;name&#39; does not exist in type &#39;User&#39;</span></span></code></pre></div></li></ul><p><code>Omit</code> and <code>Pick</code> don&#39;t work as excepted with union types</p><ul><li>When using <code>Omit</code> or <code>Pick</code> with union types, TypeScript will only apply the transformation to the common properties of the union</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  genre</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CollectorEdition</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  limitedEditionFeatures</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DigitalRelease</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  digitalFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProduct</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Album</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> CollectorEdition</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DigitalRelease</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProductWithoutId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">MusicProduct</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Expected:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProductWithoutId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">CollectorEdition</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">DigitalRelease</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Actual:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProductWithoutId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  title</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// it is same for \`Pick\` utility type</span></span></code></pre></div><ul><li>To fix the above issue, we can create <code>DistributiveOmit</code> and <code>DistributivePick</code> types:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DistributiveOmit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> PropertyKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  ?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  :</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DistributivePick</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> PropertyKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  ?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Pick</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  :</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProductWithoutId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> DistributiveOmit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">MusicProduct</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Expected:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProductWithoutId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">CollectorEdition</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">DigitalRelease</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Actual:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> MusicProductWithoutId</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Album</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">CollectorEdition</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Omit</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">DigitalRelease</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span></code></pre></div><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to “Functions”">​</a></h2><p>Functions in TypeScript are like functions in JavaScript, but with added type annotations for parameters and return values</p><ul><li><p>Specify function return type:</p><ul><li>If a function does not return anything, use <code>void</code> type</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// function that returns a string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> returnMyName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Prabhu</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> voidFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Hello!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>Argument type:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> returnMyName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li><li><p>Optional parameters (using <code>?</code> operator) and default parameters:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printName1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//function printName2(name: string = &quot;25&quot;) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printName2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">25</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // same as above</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">printName1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // undefined</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">printName2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // 25</span></span></code></pre></div></li></ul><h3 id="function-types" tabindex="-1">Function Types <a class="header-anchor" href="#function-types" aria-label="Permalink to “Function Types”">​</a></h3><p>Define the structure of a function that can be assigned to a variable</p><p><em>Example:</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// functions can be assigned to variables</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// structure of the function not specified</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> anyFunc</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// define the structure of the function that can be</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// assigned to it</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> myName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// assign a function to the variable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">myName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Optional parameters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> WithOptional</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Rest parameters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> WithRest</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">rest</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Multiple parameters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> WithMultiple</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">first</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> second</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span></code></pre></div><ul><li>Callback Function:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printAndHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> cb</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  cb</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="typing-asynchronous-functions" tabindex="-1">Typing Asynchronous Functions <a class="header-anchor" href="#typing-asynchronous-functions" aria-label="Permalink to “Typing Asynchronous Functions”">​</a></h3><p>Functions that return a promise can be typed using the <code>Promise</code> type</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> fetchUser</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;{</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">({ </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="function-overloads" tabindex="-1">Function Overloads <a class="header-anchor" href="#function-overloads" aria-label="Permalink to “Function Overloads”">​</a></h3><p>Function overloads are used to define multiple function signatures for a single function</p><ul><li>TypeScript will automatically determine which function signature to use based on the arguments passed to the function</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Combinable</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Maxi</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">mum</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Maximum</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">));</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // 12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">));</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // 12</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">956</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">));</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // Error: No overload matches this call</span></span></code></pre></div><h2 id="class" tabindex="-1">Class <a class="header-anchor" href="#class" aria-label="Permalink to “Class”">​</a></h2><p>There are some changes between <em>TypeScript</em> class and <em>ES6</em> class</p><ul><li>Access modifier can be used <code>public</code>(default), <code>private</code>, <code>protected</code></li></ul><p><em>Example:</em></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // public (default)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> typ</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  protected</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // userName will automatically assigned to this.userName</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    typ</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> userName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">typ</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> typ</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> pers1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">maxin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><ul><li>Shorthand Initializer:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> typ</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    protected</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> userName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> pers1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">maxin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><ul><li><code>readonly</code> modifier mark a property that shouldn&#39;t be changed:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 36</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Methods don&#39;t have <code>function</code> keyword.</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Handling <code>this</code>:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// The above class is used as an example</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> newCar</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Save the pointer to the function of the object</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// So that it can be used later</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> printDetails</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">newCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// This will throw an error</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Because the \`this\` keyword inside</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// the printCar method will not refer to the object of Car</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// but to the object printDetails, which dose not have</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// the seats and color properties</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">printDetails</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span></code></pre></div><ul><li>To help us catch these mistakes we can explicitly define a type for <code>this</code>:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 36</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // The object calling this function</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">  // must be an object of Car</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><p><img src="/assets/TypeScript_Classes.BCm0KT9W.png" alt="TypeScript Classes"></p><h3 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to “Inheritance”">​</a></h3><ul><li>Multiple inheritance is not supported</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Max</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">userName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Hulk</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> userName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> newMax</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Max</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">maxin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><h3 id="setters-and-getters" tabindex="-1">Setters And Getters <a class="header-anchor" href="#setters-and-getters" aria-label="Permalink to “Setters And Getters”">​</a></h3><ul><li>Getters:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 36</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  get</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> colorValue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> newCar</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">newCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">colorValue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><ul><li>Setter:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 36</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  get</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> colorValue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  set</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> colorValue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">v</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> v</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> newCar</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">newCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">colorValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Pink</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">newCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">colorValue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><h3 id="abstract-class" tabindex="-1">Abstract Class <a class="header-anchor" href="#abstract-class" aria-label="Permalink to “Abstract Class”">​</a></h3><ul><li>Abstract classes cannot be instantiated</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  abstract</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h3 id="singletons-and-private-constructors" tabindex="-1">Singletons And Private Constructors <a class="header-anchor" href="#singletons-and-private-constructors" aria-label="Permalink to “Singletons And Private Constructors”">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> instance</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  printCar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">instance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">      return</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">instance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">instance</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">seats</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">instance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> newCar</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><h2 id="satisfies-operator" tabindex="-1"><code>satisfies</code> Operator <a class="header-anchor" href="#satisfies-operator" aria-label="Permalink to “satisfies Operator”">​</a></h2><p><code>satisfies</code> (<em>v4.9</em>): Enforce a constraint on a variable, without changing its type</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> RGB</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> green</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> blue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> RGB</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> myColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Color</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myColor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toUpperCase</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//     ^^^^^^^^^^^^^^ invalid operation as myColor can be string or RGB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> myColorNew</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">red</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> satisfies</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // works</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> myIncorrectColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> satisfies</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // throws error</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myColorNew</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toUpperCase</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;"> // valid operation as myColorNew is a string</span></span></code></pre></div><h2 id="generic-types" tabindex="-1">Generic Types <a class="header-anchor" href="#generic-types" aria-label="Permalink to “Generic Types”">​</a></h2><p>Generics are a way to create reusable components that can work with a variety of types</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> ages</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#B8A965;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">promise</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> data</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">toExponential</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> U</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">obj1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> obj2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> U</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">assign</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">({ </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Prabhu</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> },</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> });</span></span></code></pre></div><ul><li>Generic Class</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> GenericNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">NumType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  zeroValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> NumType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">  add</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> NumType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> NumType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> NumType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> myGenericNumber</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> GenericNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myGenericNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">zeroValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">myGenericNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">add</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><ul><li>Type Constraints:</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> U</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">obj1</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> obj2</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> U</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">assign</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li><code>keyof</code> type operator: Takes an object type and produces a string or numeric literal union of its keys.</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Point</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> y</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> P</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Point</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Example</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> extractAndConvert</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#005CC5;--shiki-dark:#CB7676;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  key</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> K</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="global-variables" tabindex="-1">Global Variables <a class="header-anchor" href="#global-variables" aria-label="Permalink to “Global Variables”">​</a></h2><p>Global variables can be declared in TypeScript using <code>declare</code> keyword</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// If a var is defined in script tag or</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// in a JavaScript file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// &lt;script&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//    var GLOBAL = &quot;yes&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// &lt;/script&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Declare in TypeScript file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> var</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> GLOBAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;">GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><ul><li><code>window</code> object;</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// STOP doing this:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//              ^? any</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Do THIS instead:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">declare</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> global</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Window</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">    bar</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">bar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">//    ^? (property) Window.bar: () =&gt; void</span></span></code></pre></div><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-label="Permalink to “Modules”">​</a></h2><p>Code organization is important in any programming language and TypeScript is no exception. Modules are used to organize code in a way that is easy to understand and maintain</p><ul><li><p>Using <code>namespace</code>: Grouping related code</p><ul><li>Per-file or bundled compilation is possible (less imports to manage)</li><li>TypeScript specific</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Interface file: IPeople.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> People</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  export</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> IPeople</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  export</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> defName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  export</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> defAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Class file: People.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">/// </span><span style="--shiki-light:#6A737D;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#4D9375;">reference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#BD976A;"> path</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">IPeople.ts</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> People</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Person</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> IPeople</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">    age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">    constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ??</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> defName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ??</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> defAge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Set <code>outfile</code>, to concatenate files into a single file</li></ul></li><li><p>Using ES6 Imports/Exports</p><ul><li>Per-file compilation but single <code>&lt;script&gt;</code> import</li><li>Bundling via third-party tools (e.g. Webpack)</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Interface file: IPeople.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> IPeople</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> defName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Admin</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> defAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// Class file: People.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> defAge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> defName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> IPeople</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">./counter</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Person</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> IPeople</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ??</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> defName</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ??</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> defAge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ul><h2 id="decorators" tabindex="-1">Decorators <a class="header-anchor" href="#decorators" aria-label="Permalink to “Decorators”">​</a></h2><p>Decorators are a special kind of declaration that can be attached to a class declaration or a class member, method, accessor, property, or parameter</p><ul><li>They are evaluated at runtime</li><li>They are supported experimental feature in TypeScript (Use <code>experimentalDecorators</code> flag in <code>tsconfig.json</code>)</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">constructor</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Decorator called...</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">Logger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Creating object</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> per</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">per</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span></code></pre></div><ul><li>Decorator Factories</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">logString</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">constructor</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">logString</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Logging - Person</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Max</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Creating object</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}</span></span></code></pre></div><ul><li>Multiple Decorator: Bottom ones run first</li><li>Runs when a class defined not when it is instantiated</li></ul><h2 id="snippets" tabindex="-1">Snippets <a class="header-anchor" href="#snippets" aria-label="Permalink to “Snippets”">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getDeepValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &lt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">  TObj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">  TFirstKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TObj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">  TSecondKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TObj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">TFirstKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TObj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  firstKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TFirstKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  secondKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TSecondKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">firstKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">][</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">secondKey</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  foo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">    a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">    b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  bar</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">    c</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">12</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">    d</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> getDeepValue</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">foo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// typeof value === boolean</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Animal</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Human</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  firstName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  lastName</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> GetRequiredInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">TType</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> TType</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Animal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  ?</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">  :</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;"> socialSecurityNumber</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> RequiredInfoForAnimal</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> GetRequiredInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Animal</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// typeof RequiredInfoForAnimal === { age: number }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> RequiredInfoForHuman</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> GetRequiredInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Human</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#758575DD;">// typeof RequiredInfoForHuman === { socialSecurityNumber: number }</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#80A665;"> deepEqualCompare</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Arg</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  a</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> \`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">Don&#39;t pass an array!</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Arg</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#BD976A;">  b</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Arg</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light vitesse-dark" style="--shiki-light:#24292e;--shiki-dark:#dbd7caee;--shiki-light-bg:#fff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> second</span><span style="--shiki-light:#D73A49;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">ts-toolbelt</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> \`</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">/home?a=foo&amp;b=wow</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Query</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#BD976A;"> query</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> SecondQueryPart</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Split</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> QueryElements</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Split</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">SecondQueryPart</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">&amp;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> QueryParams</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">QueryElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> in</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> QueryElements</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Key</span><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;"> in</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Split</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">QueryElement</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt;[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]]</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Split</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">      QueryElement</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">    &gt;[</span><span style="--shiki-light:#005CC5;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">}[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">QueryElements</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">]];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#BD976A;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;"> Uint8ArrayConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">Merge</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#5DA994;">QueryParams</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#666666;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  a</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">foo</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#B8A965;">  b</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D;">wow</span><span style="--shiki-light:#032F62;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#666666;">};</span></span></code></pre></div><h2 id="check-out" tabindex="-1">Check Out <a class="header-anchor" href="#check-out" aria-label="Permalink to “Check Out”">​</a></h2><ul><li>Opaque Type in Typed languages</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to “Reference”">​</a></h2><ul><li><p><a href="https://github.com/sindresorhus/type-fest" target="_blank" rel="noreferrer">A collection of essential TypeScript types</a></p></li><li><p><a href="https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680" target="_blank" rel="noreferrer">10++ TypeScript Pro tips/patterns with (or without) React</a></p></li></ul>`,323)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};